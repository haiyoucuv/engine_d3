{"version":3,"file":"hycv.js","sources":["../src/math/Matrix4.ts","../src/math/Vector3.ts","../src/math/Sphere.ts","../src/math/Box3.ts","../src/math/Math.ts","../src/math/Color.ts","../src/utils/index.ts","../src/math/Quaternion.ts","../src/math/Euler.ts","../src/math/Matrix3.ts","../src/math/Ray.ts","../src/math/Vector2.ts","../src/event/EventDispatcher.ts","../src/event/SystemEvent.ts","../src/event/TouchEvent.ts","../src/app/const.ts","../src/core/WebGLRenderer.ts","../src/app/App.ts","../src/app/Director.ts","../src/core/shader/ShaderTools.ts","../src/core/Object3D.ts","../src/core/shader/generateUniformAccessObject.ts","../src/core/shader/mapType.ts","../src/core/shader/mapSize.ts","../src/core/shader/Attribute.ts","../src/core/shader/extractAttributes.ts","../src/core/shader/defaultValue.ts","../src/core/shader/extractUniforms.ts","../src/core/shader/Shader.ts","../src/scene/Scene.ts"],"sourcesContent":["import { Vector3 } from \"./Vector3\";\nimport { Quaternion } from \"./Quaternion\";\n\nexport class Matrix4 {\n    public elements: Float32Array\n\n    public readonly isMatrix4: true;\n\n    constructor(\n        m00: number | Float32Array | number[] = 1, m01: number = 0, m02: number = 0, m03: number = 0,\n        m10: number = 0, m11: number = 1, m12: number = 0, m13: number = 0,\n        m20: number = 0, m21: number = 0, m22: number = 1, m23: number = 0,\n        m30: number = 0, m31: number = 0, m32: number = 0, m33: number = 1\n    ) {\n        if (m00 instanceof Float32Array) {\n            this.elements = m00;\n        } else if (Array.isArray(m00)) {\n            this.elements = new Float32Array(m00);\n        } else {\n            this.elements = new Float32Array([\n                m00, m01, m02, m03,\n                m10, m11, m12, m13,\n                m20, m21, m22, m23,\n                m30, m31, m32, m33\n            ]);\n        }\n        // this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 初始化本矩阵\n     */\n    setIdentity() {\n        const e = this.elements;\n        e[0] = 1;\n        e[4] = 0;\n        e[8] = 0;\n        e[12] = 0;\n        e[1] = 0;\n        e[5] = 1;\n        e[9] = 0;\n        e[13] = 0;\n        e[2] = 0;\n        e[6] = 0;\n        e[10] = 1;\n        e[14] = 0;\n        e[3] = 0;\n        e[7] = 0;\n        e[11] = 0;\n        e[15] = 1;\n        return this;\n    };\n\n    set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44): this {\n        const te = this.elements;\n        te[0] = n11;\n        te[4] = n12;\n        te[8] = n13;\n        te[12] = n14;\n        te[1] = n21;\n        te[5] = n22;\n        te[9] = n23;\n        te[13] = n24;\n        te[2] = n31;\n        te[6] = n32;\n        te[10] = n33;\n        te[14] = n34;\n        te[3] = n41;\n        te[7] = n42;\n        te[11] = n43;\n        te[15] = n44;\n        return this;\n    };\n\n    copy(src: Matrix4) {\n        let i, s, d;\n        s = src.elements;\n        d = this.elements;\n        for (i = 0; i < 16; ++i) d[i] = s[i];\n        return this;\n    };\n\n    clone() {\n        return new Matrix4().fromArray(this.elements);\n    };\n\n    equals(matrix) {\n\n        const te = this.elements;\n        const me = matrix.elements;\n\n        for (let i = 0; i < 16; i++) {\n\n            if (te[i] !== me[i]) return false;\n\n        }\n\n        return true;\n\n    };\n\n    fromArray(array, offset = 0) {\n        for (let i = 0; i < 16; i++) this.elements[i] = array[i + offset];\n        return this;\n    };\n\n    toArray(array = [], offset = 0) {\n        const te = this.elements;\n\n        array[offset] = te[0];\n        array[offset + 1] = te[1];\n        array[offset + 2] = te[2];\n        array[offset + 3] = te[3];\n\n        array[offset + 4] = te[4];\n        array[offset + 5] = te[5];\n        array[offset + 6] = te[6];\n        array[offset + 7] = te[7];\n\n        array[offset + 8] = te[8];\n        array[offset + 9] = te[9];\n        array[offset + 10] = te[10];\n        array[offset + 11] = te[11];\n\n        array[offset + 12] = te[12];\n        array[offset + 13] = te[13];\n        array[offset + 14] = te[14];\n        array[offset + 15] = te[15];\n\n        return array;\n\n    };\n\n    /**\n     * Multiply the matrix from the right.\n     * @param other The multiply matrix\n     * @return this\n     */\n    concat(other: Matrix4) {\n        let i, e, a, b, ai0, ai1, ai2, ai3;\n\n        // Calculate e = a * b\n        e = this.elements;\n        a = this.elements;\n        b = other.elements;\n\n        // If e equals b, copy b to temporary matrix.\n        if (e === b) {\n            b = new Float32Array(16);\n            for (i = 0; i < 16; ++i) {\n                b[i] = e[i];\n            }\n        }\n\n        for (i = 0; i < 4; i++) {\n            ai0 = a[i];\n            ai1 = a[i + 4];\n            ai2 = a[i + 8];\n            ai3 = a[i + 12];\n            e[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\n            e[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\n            e[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\n            e[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\n        }\n\n        return this;\n    };\n\n    // multiply = this.concat;\n\n    multiply(m) {\n        return this.multiplyMatrices(this, m);\n    };\n\n    premultiply(m) {\n        return this.multiplyMatrices(m, this);\n    };\n\n    multiplyMatrices(a, b) {\n        const ae = a.elements;\n        const be = b.elements;\n        const te = this.elements;\n\n        const a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\n        const a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\n        const a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\n        const a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\n\n        const b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\n        const b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\n        const b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\n        const b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\n\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n        te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n        te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n        te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n        te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n        te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n        te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n        te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n        te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n        te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n        te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n        te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n        te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n        te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n        return this;\n    };\n\n    /**\n     * Multiply the three-dimensional vector.\n     * @param pos  The multiply vector\n     * @return The result of multiplication(Float32Array)\n     */\n    multiplyVector3(pos: Vector3): Vector3 {\n        const e = this.elements;\n        return new Vector3().set(\n            pos.x * e[0] + pos.y * e[4] + pos.z * e[8] + e[12],\n            pos.x * e[1] + pos.y * e[5] + pos.z * e[9] + e[13],\n            pos.x * e[2] + pos.y * e[6] + pos.z * e[10] + e[14]\n        )\n    };\n\n    /**\n     * Multiply the four-dimensional vector.\n     * @param pos  The multiply vector\n     * @return The result of multiplication(Float32Array)\n     */\n    // multiplyVector4(pos) {\n    //     const e = this.elements;\n    //     const p = pos.elements;\n    //     const v = new Vector4();\n    //     const result = v.elements;\n\n    //     result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + p[3] * e[12];\n    //     result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + p[3] * e[13];\n    //     result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\n    //     result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\n\n    //     return v;\n    // };\n\n    /**\n     * Transpose the matrix.转置\n     * @return this\n     */\n    transpose(): this {\n        let e, t;\n\n        e = this.elements;\n\n        t = e[1];\n        e[1] = e[4];\n        e[4] = t;\n        t = e[2];\n        e[2] = e[8];\n        e[8] = t;\n        t = e[3];\n        e[3] = e[12];\n        e[12] = t;\n        t = e[6];\n        e[6] = e[9];\n        e[9] = t;\n        t = e[7];\n        e[7] = e[13];\n        e[13] = t;\n        t = e[11];\n        e[11] = e[14];\n        e[14] = t;\n\n        return this;\n    };\n\n    /**\n     * Calculate the inverse matrix of specified matrix, and set to this.将一矩阵的逆赋给自己\n     * @param other The source matrix\n     * @return this\n     */\n    setInverseOf(other: Matrix4): this {\n        let i, s, d, inv, det;\n\n        s = other.elements;\n        d = this.elements;\n        inv = new Float32Array(16);\n\n        inv[0] = s[5] * s[10] * s[15] - s[5] * s[11] * s[14] - s[9] * s[6] * s[15]\n            + s[9] * s[7] * s[14] + s[13] * s[6] * s[11] - s[13] * s[7] * s[10];\n        inv[4] = -s[4] * s[10] * s[15] + s[4] * s[11] * s[14] + s[8] * s[6] * s[15]\n            - s[8] * s[7] * s[14] - s[12] * s[6] * s[11] + s[12] * s[7] * s[10];\n        inv[8] = s[4] * s[9] * s[15] - s[4] * s[11] * s[13] - s[8] * s[5] * s[15]\n            + s[8] * s[7] * s[13] + s[12] * s[5] * s[11] - s[12] * s[7] * s[9];\n        inv[12] = -s[4] * s[9] * s[14] + s[4] * s[10] * s[13] + s[8] * s[5] * s[14]\n            - s[8] * s[6] * s[13] - s[12] * s[5] * s[10] + s[12] * s[6] * s[9];\n\n        inv[1] = -s[1] * s[10] * s[15] + s[1] * s[11] * s[14] + s[9] * s[2] * s[15]\n            - s[9] * s[3] * s[14] - s[13] * s[2] * s[11] + s[13] * s[3] * s[10];\n        inv[5] = s[0] * s[10] * s[15] - s[0] * s[11] * s[14] - s[8] * s[2] * s[15]\n            + s[8] * s[3] * s[14] + s[12] * s[2] * s[11] - s[12] * s[3] * s[10];\n        inv[9] = -s[0] * s[9] * s[15] + s[0] * s[11] * s[13] + s[8] * s[1] * s[15]\n            - s[8] * s[3] * s[13] - s[12] * s[1] * s[11] + s[12] * s[3] * s[9];\n        inv[13] = s[0] * s[9] * s[14] - s[0] * s[10] * s[13] - s[8] * s[1] * s[14]\n            + s[8] * s[2] * s[13] + s[12] * s[1] * s[10] - s[12] * s[2] * s[9];\n\n        inv[2] = s[1] * s[6] * s[15] - s[1] * s[7] * s[14] - s[5] * s[2] * s[15]\n            + s[5] * s[3] * s[14] + s[13] * s[2] * s[7] - s[13] * s[3] * s[6];\n        inv[6] = -s[0] * s[6] * s[15] + s[0] * s[7] * s[14] + s[4] * s[2] * s[15]\n            - s[4] * s[3] * s[14] - s[12] * s[2] * s[7] + s[12] * s[3] * s[6];\n        inv[10] = s[0] * s[5] * s[15] - s[0] * s[7] * s[13] - s[4] * s[1] * s[15]\n            + s[4] * s[3] * s[13] + s[12] * s[1] * s[7] - s[12] * s[3] * s[5];\n        inv[14] = -s[0] * s[5] * s[14] + s[0] * s[6] * s[13] + s[4] * s[1] * s[14]\n            - s[4] * s[2] * s[13] - s[12] * s[1] * s[6] + s[12] * s[2] * s[5];\n\n        inv[3] = -s[1] * s[6] * s[11] + s[1] * s[7] * s[10] + s[5] * s[2] * s[11]\n            - s[5] * s[3] * s[10] - s[9] * s[2] * s[7] + s[9] * s[3] * s[6];\n        inv[7] = s[0] * s[6] * s[11] - s[0] * s[7] * s[10] - s[4] * s[2] * s[11]\n            + s[4] * s[3] * s[10] + s[8] * s[2] * s[7] - s[8] * s[3] * s[6];\n        inv[11] = -s[0] * s[5] * s[11] + s[0] * s[7] * s[9] + s[4] * s[1] * s[11]\n            - s[4] * s[3] * s[9] - s[8] * s[1] * s[7] + s[8] * s[3] * s[5];\n        inv[15] = s[0] * s[5] * s[10] - s[0] * s[6] * s[9] - s[4] * s[1] * s[10]\n            + s[4] * s[2] * s[9] + s[8] * s[1] * s[6] - s[8] * s[2] * s[5];\n\n        det = s[0] * inv[0] + s[1] * inv[4] + s[2] * inv[8] + s[3] * inv[12];\n        if (det === 0) return this;\n\n\n        det = 1 / det;\n        for (i = 0; i < 16; i++) d[i] = inv[i] * det;\n\n\n        return this;\n    };\n\n    /**\n     * Calculate the inverse matrix of this, and set to this.\n     * @return this\n     */\n    invert(): this {\n        return this.setInverseOf(this);\n    };\n\n    /**\n     * Set the orthographic projection matrix.正交投影矩阵\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @return this\n     */\n    setOrtho(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\n        let e, rw, rh, rd;\n\n        if (left === right || bottom === top || near === far) {\n            throw 'null frustum';\n        }\n\n        rw = 1 / (right - left);\n        rh = 1 / (top - bottom);\n        rd = 1 / (far - near);\n\n        e = this.elements;\n\n        e[0] = 2 * rw;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n\n        e[4] = 0;\n        e[5] = 2 * rh;\n        e[6] = 0;\n        e[7] = 0;\n\n        e[8] = 0;\n        e[9] = 0;\n        e[10] = -2 * rd;\n        e[11] = 0;\n\n        e[12] = -(right + left) * rw;\n        e[13] = -(top + bottom) * rh;\n        e[14] = -(far + near) * rd;\n        e[15] = 1;\n\n        return this;\n    };\n\n    /**\n     * Multiply the orthographic projection matrix from the right.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @return this\n     */\n    ortho(left, right, bottom, top, near, far) {\n        return this.concat(new Matrix4().setOrtho(left, right, bottom, top, near, far));\n    };\n\n    /**\n     * Set the perspective projection matrix.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    setFrustum(left, right, bottom, top, near, far) {\n        let e, rw, rh, rd;\n\n        if (left === right || top === bottom || near === far) {\n            throw 'null frustum';\n        }\n        if (near <= 0) {\n            throw 'near <= 0';\n        }\n        if (far <= 0) {\n            throw 'far <= 0';\n        }\n\n        rw = 1 / (right - left);\n        rh = 1 / (top - bottom);\n        rd = 1 / (far - near);\n\n        e = this.elements;\n\n        e[0] = 2 * near * rw;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n\n        e[4] = 0;\n        e[5] = 2 * near * rh;\n        e[6] = 0;\n        e[7] = 0;\n\n        e[8] = (right + left) * rw;\n        e[9] = (top + bottom) * rh;\n        e[10] = -(far + near) * rd;\n        e[11] = -1;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = -2 * near * far * rd;\n        e[15] = 0;\n\n        return this;\n    };\n\n    /**\n     * Multiply the perspective projection matrix from the right.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    frustum(left, right, bottom, top, near, far) {\n        return this.concat(new Matrix4().setFrustum(left, right, bottom, top, near, far));\n    };\n\n    /**\n     * Set the perspective projection matrix by fovy and aspect.\n     * @param fovy The angle between the upper and lower sides of the frustum.\n     * @param aspect The aspect ratio of the frustum. (width/height)\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    setPerspective(fovy: number, aspect: number, near: number, far: number): this {\n        let e, rd, s, ct;\n\n        if (near === far || aspect === 0) {\n            throw 'null frustum';\n        }\n        if (near <= 0) {\n            throw 'near <= 0';\n        }\n        if (far <= 0) {\n            throw 'far <= 0';\n        }\n\n        fovy = Math.PI * fovy / 180 / 2;\n        s = Math.sin(fovy);\n        if (s === 0) {\n            throw 'null frustum';\n        }\n\n        rd = 1 / (far - near);\n        ct = Math.cos(fovy) / s;\n\n        e = this.elements;\n\n        e[0] = ct / aspect;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n\n        e[4] = 0;\n        e[5] = ct;\n        e[6] = 0;\n        e[7] = 0;\n\n        e[8] = 0;\n        e[9] = 0;\n        e[10] = -(far + near) * rd;\n        e[11] = -1;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = -2 * near * far * rd;\n        e[15] = 0;\n\n        return this;\n    };\n\n    makePerspective(left, right, top, bottom, near, far) {\n        // const near = this.near,\n        //     top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n        //     height = 2 * top,\n        //     width = this.aspect * height,\n        //     left = - 0.5 * width,\n        const te = this.elements;\n        const x = 2 * near / (right - left);\n        const y = 2 * near / (top - bottom);\n        const a = (right + left) / (right - left);\n        const b = (top + bottom) / (top - bottom);\n        const c = -(far + near) / (far - near);\n        const d = -2 * far * near / (far - near);\n        te[0] = x;\n        te[4] = 0;\n        te[8] = a;\n        te[12] = 0;\n        te[1] = 0;\n        te[5] = y;\n        te[9] = b;\n        te[13] = 0;\n        te[2] = 0;\n        te[6] = 0;\n        te[10] = c;\n        te[14] = d;\n        te[3] = 0;\n        te[7] = 0;\n        te[11] = -1;\n        te[15] = 0;\n        return this;\n    };\n\n    /**\n     * Multiply the perspective projection matrix from the right.\n     * @param fovy The angle between the upper and lower sides of the frustum.\n     * @param aspect The aspect ratio of the frustum. (width/height)\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    perspective(fovy, aspect, near, far) {\n        return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\n    };\n\n    /**\n     * Set the matrix for scaling.\n     * @param x The scale factor along the X axis\n     * @param y The scale factor along the Y axis\n     * @param z The scale factor along the Z axis\n     * @return this\n     */\n    setScale(x, y, z) {\n        const e = this.elements;\n        e[0] = x;\n        e[4] = 0;\n        e[8] = 0;\n        e[12] = 0;\n        e[1] = 0;\n        e[5] = y;\n        e[9] = 0;\n        e[13] = 0;\n        e[2] = 0;\n        e[6] = 0;\n        e[10] = z;\n        e[14] = 0;\n        e[3] = 0;\n        e[7] = 0;\n        e[11] = 0;\n        e[15] = 1;\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for scaling from the right.\n     * @param x The scale factor along the X axis\n     * @param y The scale factor along the Y axis\n     * @param z The scale factor along the Z axis\n     * @return this\n     */\n    scale(x, y, z) {\n        const e = this.elements;\n        e[0] *= x;\n        e[4] *= y;\n        e[8] *= z;\n        e[1] *= x;\n        e[5] *= y;\n        e[9] *= z;\n        e[2] *= x;\n        e[6] *= y;\n        e[10] *= z;\n        e[3] *= x;\n        e[7] *= y;\n        e[11] *= z;\n        return this;\n    };\n\n    getMaxScaleOnAxis() {\n        const te = this.elements;\n        const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n        const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n        const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n        return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    };\n\n    /**\n     * Set the matrix for translation.\n     * @param x The X value of a translation.\n     * @param y The Y value of a translation.\n     * @param z The Z value of a translation.\n     * @return this\n     */\n    setTranslate(x, y, z) {\n        const e = this.elements;\n        e[0] = 1;\n        e[4] = 0;\n        e[8] = 0;\n        e[12] = x;\n        e[1] = 0;\n        e[5] = 1;\n        e[9] = 0;\n        e[13] = y;\n        e[2] = 0;\n        e[6] = 0;\n        e[10] = 1;\n        e[14] = z;\n        e[3] = 0;\n        e[7] = 0;\n        e[11] = 0;\n        e[15] = 1;\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for translation from the right.\n     * @param x The X value of a translation.\n     * @param y The Y value of a translation.\n     * @param z The Z value of a translation.\n     * @return this\n     */\n    translate(x, y, z) {\n        const e = this.elements;\n        e[12] += e[0] * x + e[4] * y + e[8] * z;\n        e[13] += e[1] * x + e[5] * y + e[9] * z;\n        e[14] += e[2] * x + e[6] * y + e[10] * z;\n        e[15] += e[3] * x + e[7] * y + e[11] * z;\n        return this;\n    };\n\n    /**\n     * Set the matrix for rotation.\n     * The vector of rotation axis may not be normalized.\n     * @param angle The angle of rotation (degrees)\n     * @param x The X coordinate of vector of rotation axis.\n     * @param y The Y coordinate of vector of rotation axis.\n     * @param z The Z coordinate of vector of rotation axis.\n     * @return this\n     */\n    setRotate(angle, x, y, z) {\n        let e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\n\n        angle = Math.PI * angle / 180;\n        e = this.elements;\n\n        s = Math.sin(angle);\n        c = Math.cos(angle);\n\n        if (0 !== x && 0 === y && 0 === z) {\n            // Rotation around X axis\n            if (x < 0) {\n                s = -s;\n            }\n            e[0] = 1;\n            e[4] = 0;\n            e[8] = 0;\n            e[12] = 0;\n            e[1] = 0;\n            e[5] = c;\n            e[9] = -s;\n            e[13] = 0;\n            e[2] = 0;\n            e[6] = s;\n            e[10] = c;\n            e[14] = 0;\n            e[3] = 0;\n            e[7] = 0;\n            e[11] = 0;\n            e[15] = 1;\n        } else if (0 === x && 0 !== y && 0 === z) {\n            // Rotation around Y axis\n            if (y < 0) {\n                s = -s;\n            }\n            e[0] = c;\n            e[4] = 0;\n            e[8] = s;\n            e[12] = 0;\n            e[1] = 0;\n            e[5] = 1;\n            e[9] = 0;\n            e[13] = 0;\n            e[2] = -s;\n            e[6] = 0;\n            e[10] = c;\n            e[14] = 0;\n            e[3] = 0;\n            e[7] = 0;\n            e[11] = 0;\n            e[15] = 1;\n        } else if (0 === x && 0 === y && 0 !== z) {\n            // Rotation around Z axis\n            if (z < 0) {\n                s = -s;\n            }\n            e[0] = c;\n            e[4] = -s;\n            e[8] = 0;\n            e[12] = 0;\n            e[1] = s;\n            e[5] = c;\n            e[9] = 0;\n            e[13] = 0;\n            e[2] = 0;\n            e[6] = 0;\n            e[10] = 1;\n            e[14] = 0;\n            e[3] = 0;\n            e[7] = 0;\n            e[11] = 0;\n            e[15] = 1;\n        } else {\n            // Rotation around another axis\n            len = Math.sqrt(x * x + y * y + z * z);\n            if (len !== 1) {\n                rlen = 1 / len;\n                x *= rlen;\n                y *= rlen;\n                z *= rlen;\n            }\n            nc = 1 - c;\n            xy = x * y;\n            yz = y * z;\n            zx = z * x;\n            xs = x * s;\n            ys = y * s;\n            zs = z * s;\n\n            e[0] = x * x * nc + c;\n            e[1] = xy * nc + zs;\n            e[2] = zx * nc - ys;\n            e[3] = 0;\n\n            e[4] = xy * nc - zs;\n            e[5] = y * y * nc + c;\n            e[6] = yz * nc + xs;\n            e[7] = 0;\n\n            e[8] = zx * nc + ys;\n            e[9] = yz * nc - xs;\n            e[10] = z * z * nc + c;\n            e[11] = 0;\n\n            e[12] = 0;\n            e[13] = 0;\n            e[14] = 0;\n            e[15] = 1;\n        }\n\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for rotation from the right.\n     * The vector of rotation axis may not be normalized.\n     * @param angle The angle of rotation (degrees)\n     * @param x The X coordinate of vector of rotation axis.\n     * @param y The Y coordinate of vector of rotation axis.\n     * @param z The Z coordinate of vector of rotation axis.\n     * @return this\n     */\n    rotate(angle, x, y, z) {\n        return this.concat(new Matrix4().setRotate(angle, x, y, z));\n    };\n\n    /**\n     * Set the viewing matrix.\n     * @return this\n     * @param eye\n     * @param center\n     * @param up\n     */\n    setLookAt(eye: Vector3, center: Vector3, up: Vector3) {\n        let e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\n\n        fx = center.x - eye.x;\n        fy = center.y - eye.y;\n        fz = center.z - eye.z;\n\n        // Normalize f.\n        rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\n        fx *= rlf;\n        fy *= rlf;\n        fz *= rlf;\n\n        // Calculate cross product of f and up.\n        sx = fy * up.z - fz * up.y;\n        sy = fz * up.x - fx * up.z;\n        sz = fx * up.y - fy * up.x;\n\n        // Normalize s.\n        rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz);\n        sx *= rls;\n        sy *= rls;\n        sz *= rls;\n\n        // Calculate cross product of s and f.\n        ux = sy * fz - sz * fy;\n        uy = sz * fx - sx * fz;\n        uz = sx * fy - sy * fx;\n\n        // Set to this.\n        e = this.elements;\n        e[0] = sx;\n        e[1] = ux;\n        e[2] = -fx;\n        e[3] = 0;\n\n        e[4] = sy;\n        e[5] = uy;\n        e[6] = -fy;\n        e[7] = 0;\n\n        e[8] = sz;\n        e[9] = uz;\n        e[10] = -fz;\n        e[11] = 0;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = 0;\n        e[15] = 1;\n\n        // Translate.\n        return this.translate(-eye.x, -eye.y, -eye.z);\n    };\n\n\n    // lookAt(eye: Vector3, center: Vector3, up: Vector3) {\n    //     // return this.concat(new Matrix4().setLookAt(\n    //     //     eye.x, eye.y, eye.z,\n    //     //     center.x, center.y, center.z,\n    //     //     up.x, up.y, up.z));\n    //     return this.setLookAt(\n    //         eye.x, eye.y, eye.z,\n    //         center.x, center.y, center.z,\n    //         up.x, up.y, up.z);\n    // };\n    //three上的，上面的setLookAt后的矩阵就是视图矩阵\n    lookAt(eye: Vector3, target: Vector3, up: Vector3) {\n        const x = new Vector3();\n        const y = new Vector3();\n        const z = new Vector3();\n        const te = this.elements;\n        z.subVectors(eye, target);\n        if (z.lengthSq() === 0) {\n            // eye and target are in the same position\n            z.z = 1;\n        }\n        z.normalize();\n        x.crossVectors(up, z);\n        if (x.lengthSq() === 0) {\n            // up and z are parallel\n            if (Math.abs(up.z) === 1) {\n                z.x += 0.0001;\n            } else {\n                z.z += 0.0001;\n            }\n            z.normalize();\n            x.crossVectors(up, z);\n        }\n        x.normalize();\n        y.crossVectors(z, x);\n        te[0] = x.x;\n        te[4] = y.x;\n        te[8] = z.x;\n        te[1] = x.y;\n        te[5] = y.y;\n        te[9] = z.y;\n        te[2] = x.z;\n        te[6] = y.z;\n        te[10] = z.z;\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for project vertex to plane from the right.\n     * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\n     * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\n     * @return this\n     */\n    dropShadow(plane, light) {\n        const mat = new Matrix4();\n        const e = mat.elements;\n\n        const dot = plane[0] * light[0] + plane[1] * light[1] + plane[2] * light[2] + plane[3] * light[3];\n\n        e[0] = dot - light[0] * plane[0];\n        e[1] = -light[1] * plane[0];\n        e[2] = -light[2] * plane[0];\n        e[3] = -light[3] * plane[0];\n\n        e[4] = -light[0] * plane[1];\n        e[5] = dot - light[1] * plane[1];\n        e[6] = -light[2] * plane[1];\n        e[7] = -light[3] * plane[1];\n\n        e[8] = -light[0] * plane[2];\n        e[9] = -light[1] * plane[2];\n        e[10] = dot - light[2] * plane[2];\n        e[11] = -light[3] * plane[2];\n\n        e[12] = -light[0] * plane[3];\n        e[13] = -light[1] * plane[3];\n        e[14] = -light[2] * plane[3];\n        e[15] = dot - light[3] * plane[3];\n\n        return this.concat(mat);\n    }\n\n    /**\n     * Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\n     * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\n     * @param normY\n     * @param normZ\n     * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\n     * @param planeY\n     * @param planeZ\n     * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\n     * @param lightY\n     * @param lightZ\n     * @return this\n     */\n    dropShadowDirectionally(normX, normY, normZ, planeX, planeY, planeZ, lightX, lightY, lightZ) {\n        const a = planeX * normX + planeY * normY + planeZ * normZ;\n        return this.dropShadow([normX, normY, normZ, -a], [lightX, lightY, lightZ, 0]);\n    };\n\n    makeRotationFromQuaternion(q) {\n        const zero = new Vector3(0, 0, 0);\n        const one = new Vector3(1, 1, 1);\n        return this.compose(zero, q, one);\n    };\n\n    compose(position: Vector3, quaternion: Quaternion, scale: Vector3) {\n\n        const te = this.elements;\n\n        const x = quaternion.x, y = quaternion.y, z = quaternion.z, w = quaternion.w;\n        const x2 = x + x, y2 = y + y, z2 = z + z;\n        const xx = x * x2, xy = x * y2, xz = x * z2;\n        const yy = y * y2, yz = y * z2, zz = z * z2;\n        const wx = w * x2, wy = w * y2, wz = w * z2;\n\n        const sx = scale.x, sy = scale.y, sz = scale.z;\n\n        te[0] = (1 - (yy + zz)) * sx;\n        te[1] = (xy + wz) * sx;\n        te[2] = (xz - wy) * sx;\n        te[3] = 0;\n\n        te[4] = (xy - wz) * sy;\n        te[5] = (1 - (xx + zz)) * sy;\n        te[6] = (yz + wx) * sy;\n        te[7] = 0;\n\n        te[8] = (xz + wy) * sz;\n        te[9] = (yz - wx) * sz;\n        te[10] = (1 - (xx + yy)) * sz;\n        te[11] = 0;\n\n        te[12] = position.x;\n        te[13] = position.y;\n        te[14] = position.z;\n        te[15] = 1;\n\n        return this;\n\n    }\n\n    decompose(position, quaternion, scale) {\n        const vector = new Vector3();\n        const matrix = new Matrix4();\n        const te = this.elements;\n        let sx = vector.set(te[0], te[1], te[2]).length();\n        const sy = vector.set(te[4], te[5], te[6]).length();\n        const sz = vector.set(te[8], te[9], te[10]).length();\n\n        // if determine is negative, we need to invert one scale\n        const det = this.determinant();\n        if (det < 0) sx = -sx;\n\n        position.x = te[12];\n        position.y = te[13];\n        position.z = te[14];\n\n        // scale the rotation part\n        matrix.copy(this);\n\n        const invSX = 1 / sx;\n        const invSY = 1 / sy;\n        const invSZ = 1 / sz;\n\n        matrix.elements[0] *= invSX;\n        matrix.elements[1] *= invSX;\n        matrix.elements[2] *= invSX;\n\n        matrix.elements[4] *= invSY;\n        matrix.elements[5] *= invSY;\n        matrix.elements[6] *= invSY;\n\n        matrix.elements[8] *= invSZ;\n        matrix.elements[9] *= invSZ;\n        matrix.elements[10] *= invSZ;\n\n        quaternion.setFromRotationMatrix(matrix);\n\n        scale.x = sx;\n        scale.y = sy;\n        scale.z = sz;\n\n        return this;\n    }\n\n    determinant() {\n\n        const te = this.elements;\n\n        const n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];\n        const n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];\n        const n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];\n        const n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];\n\n        //TODO: make this more efficient\n        //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n        return (\n            n41 * (\n                +n14 * n23 * n32\n                - n13 * n24 * n32\n                - n14 * n22 * n33\n                + n12 * n24 * n33\n                + n13 * n22 * n34\n                - n12 * n23 * n34\n            ) +\n            n42 * (\n                +n11 * n23 * n34\n                - n11 * n24 * n33\n                + n14 * n21 * n33\n                - n13 * n21 * n34\n                + n13 * n24 * n31\n                - n14 * n23 * n31\n            ) +\n            n43 * (\n                +n11 * n24 * n32\n                - n11 * n22 * n34\n                - n14 * n21 * n32\n                + n12 * n21 * n34\n                + n14 * n22 * n31\n                - n12 * n24 * n31\n            ) +\n            n44 * (\n                -n13 * n22 * n31\n                - n11 * n23 * n32\n                + n11 * n22 * n33\n                + n13 * n21 * n32\n                - n12 * n21 * n33\n                + n12 * n23 * n31\n            )\n\n        );\n\n    };\n\n    extractRotation(m) {\n        const v1 = new Vector3();\n        const te = this.elements;\n        const me = m.elements;\n\n        const scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n        const scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n        const scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n\n        te[0] = me[0] * scaleX;\n        te[1] = me[1] * scaleX;\n        te[2] = me[2] * scaleX;\n        te[3] = 0;\n\n        te[4] = me[4] * scaleY;\n        te[5] = me[5] * scaleY;\n        te[6] = me[6] * scaleY;\n        te[7] = 0;\n\n        te[8] = me[8] * scaleZ;\n        te[9] = me[9] * scaleZ;\n        te[10] = me[10] * scaleZ;\n        te[11] = 0;\n\n        te[12] = 0;\n        te[13] = 0;\n        te[14] = 0;\n        te[15] = 1;\n\n        return this;\n\n    };\n}\n\n/**\n * 一个快速创建的方法\n * @returns {Matrix4}\n */\nexport function mat4(\n    m00: number | Float32Array | number[] = 1, m01: number = 0, m02: number = 0, m03: number = 0,\n    m10: number = 0, m11: number = 1, m12: number = 0, m13: number = 0,\n    m20: number = 0, m21: number = 0, m22: number = 1, m23: number = 0,\n    m30: number = 0, m31: number = 0, m32: number = 0, m33: number = 1\n) {\n    return new Matrix4(\n        m00, m01, m02, m03,\n        m10, m11, m12, m13,\n        m20, m21, m22, m23,\n        m30, m31, m32, m33\n    );\n}\n","import { Matrix4 } from \"./Matrix4\";\nimport { Camera } from \"../camera/Camera\";\nimport { Matrix3 } from \"./Matrix3\";\n\nexport class Vector3 {\n    constructor(\n        public x: number = 0,\n        public y: number = x,\n        public z: number = x\n    ) {\n    }\n\n    set(x: number, y: number, z: number): this {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this\n    }\n\n    copy(v: Vector3): this {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        return this\n    }\n\n    clone(): Vector3 {\n        return new Vector3().copy(this);\n    }\n\n    add(v: Vector3) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n\n    addScalar(s: number) {\n\n        this.x += s;\n        this.y += s;\n        this.z += s;\n\n        return this;\n\n    }\n\n    addVectors(a: Vector3, b: Vector3) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n        return this;\n    }\n\n    addScaledVector(v: Vector3, s: number) {\n        this.x += v.x * s;\n        this.y += v.y * s;\n        this.z += v.z * s;\n        return this;\n    }\n\n    sub(v: Vector3) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n\n    };\n\n    subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        this.z -= s;\n        return this;\n    };\n\n    subVectors(a: Vector3, b: Vector3) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n        return this;\n    };\n\n    multiplyScalar(scalar: number) {\n\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n\n        return this;\n\n    };\n\n    multiplyVectors(a: Vector3, b: Vector3) {\n        this.x = a.x * b.x;\n        this.y = a.y * b.y;\n        this.z = a.z * b.z;\n        return this;\n    };\n\n    divide(v: Vector3) {\n        this.x /= v.x;\n        this.y /= v.y;\n        this.z /= v.z;\n        return this;\n    };\n\n    divideScalar(scalar: number) {\n        return this.multiplyScalar(1 / scalar);\n    };\n\n    cross(v: Vector3) {\n        return this.crossVectors(this, v);\n    };\n\n    crossVectors(a: Vector3, b: Vector3) {\n        const ax = a.x, ay = a.y, az = a.z;\n        const bx = b.x, by = b.y, bz = b.z;\n\n        this.x = ay * bz - az * by;\n        this.y = az * bx - ax * bz;\n        this.z = ax * by - ay * bx;\n        return this;\n    };\n\n    dot(v: Vector3) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    /**\n     * 长度\n     */\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    lengthSq() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    /**\n     * 标准化，长度为1\n     */\n    normalize() {\n        const scalar = 1 / (this.length() || 1);\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n        return this;\n    }\n\n    distanceTo(v: Vector3) {\n        return Math.sqrt(this.distanceToSquared(v));\n    };\n\n    distanceToSquared(v: Vector3) {\n        const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n        return dx * dx + dy * dy + dz * dz;\n    };\n\n    min(v: Vector3) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        this.z = Math.min(this.z, v.z);\n        return this;\n    };\n\n    max(v: Vector3) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        this.z = Math.max(this.z, v.z);\n        return this;\n    };\n\n    clamp(min: Vector3, max: Vector3) {\n        this.x = Math.max(min.x, Math.min(max.x, this.x));\n        this.y = Math.max(min.y, Math.min(max.y, this.y));\n        this.z = Math.max(min.z, Math.min(max.z, this.z));\n        return this;\n    };\n\n    clampScalar(minVal: number, maxVal: number) {\n        return this.clamp(new Vector3(minVal, minVal, minVal), new Vector3(maxVal, maxVal, maxVal));\n    }\n\n    clampLength(min: number, max: number) {\n        return this.divideScalar(this.length() || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    };\n\n    /**\n     * applyMatrix4\n     * @param m\n     */\n    applyMatrix4(m: Matrix4) {\n        const x = this.x, y = this.y, z = this.z;\n        const e = m.elements;\n        const w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n        this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n        this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n        this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n        return this;\n    };\n\n    /**\n     * applyMatrix3\n     * @param m\n     */\n    applyMatrix3(m: Matrix3) {\n        const x = this.x, y = this.y, z = this.z;\n        const e = m.elements;\n        this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]);\n        this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]);\n        this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]);\n        return this;\n    };\n\n    /**\n     * 从矩阵获得位置\n     * @param m\n     */\n    setFromMatrixPosition(m: Matrix4) {\n        const e = m.elements;\n        this.x = e[12];\n        this.y = e[13];\n        this.z = e[14];\n        return this;\n    };\n\n    /**\n     * 从矩阵获得缩放值\n     * @param m\n     */\n    setFromMatrixScale(m: Matrix4) {\n        const sx = this.setFromMatrixColumn(m, 0).length();\n        const sy = this.setFromMatrixColumn(m, 1).length();\n        const sz = this.setFromMatrixColumn(m, 2).length();\n        this.x = sx;\n        this.y = sy;\n        this.z = sz;\n        return this;\n    }\n\n    setFromMatrixColumn(m: Matrix4, index: number) {\n        return this.fromArray(m.elements, index * 4);\n    };\n\n    transformDirection(m: Matrix4) {\n        const x = this.x, y = this.y, z = this.z;\n        const e = m.elements;\n        this.x = e[0] * x + e[4] * y + e[8] * z;\n        this.y = e[1] * x + e[5] * y + e[9] * z;\n        this.z = e[2] * x + e[6] * y + e[10] * z;\n        return this.normalize();\n    };\n\n    /**\n     * 转换成屏幕坐标，范围-1到1，可根据stage转换成stage上坐标，或者canvas坐标\n     * @param camera\n     */\n    project(camera: Camera) {\n        return this.applyMatrix4(camera.worldMatrixInverse).applyMatrix4(camera.projectionMatrix);\n    };\n\n    unproject(camera: Camera) {\n        return this.applyMatrix4(new Matrix4().setInverseOf(camera.projectionMatrix)).applyMatrix4(camera._worldMatrix);\n    };\n\n\n    equals(v: Vector3) {\n        return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n    }\n\n    fromArray(array: number[] | Float32Array, offset: number = 0) {\n        this.x = array[offset];\n        this.y = array[offset + 1];\n        this.z = array[offset + 2];\n        return this;\n    };\n\n    toArray(array: number[] = [], offset: number = 0) {\n        array[offset] = this.x;\n        array[offset + 1] = this.y;\n        array[offset + 2] = this.z;\n        return array;\n    };\n}\n\n/**\n * 一个快速创建的方法\n * @returns {Vector3}\n */\nexport function v3(x: number = 0, y: number = x, z: number = x) {\n    return new Vector3(x, y, z);\n}\n","import { Box3 } from './Box3';\nimport { Vector3 } from './Vector3';\nimport { Matrix4 } from './Matrix4';\n\nexport class Sphere {\n    constructor(\n        public center = new Vector3(),\n        public radius: number = 0\n    ) {\n    }\n\n    set(center: Vector3, radius: number) {\n        this.center.copy(center);\n        this.radius = radius;\n        return this;\n    }\n\n    setFromPoints(points: Vector3[], optionalCenter?: Vector3) {\n        const box = new Box3();\n        const center = this.center;\n        if (optionalCenter !== undefined) {\n            center.copy(optionalCenter);\n        } else {\n            box.setFromPoints(points).getCenter(center);\n        }\n        let maxRadiusSq = 0;\n        for (let i = 0, il = points.length; i < il; i++) {\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n        }\n        this.radius = Math.sqrt(maxRadiusSq);\n        return this;\n    }\n\n    clone() {\n        return new Sphere().copy(this);\n    };\n\n    copy(sphere: Sphere) {\n        this.center.copy(sphere.center);\n        this.radius = sphere.radius;\n        return this;\n    };\n\n    empty() {\n        return (this.radius <= 0);\n    }\n\n    containsPoint(point: Vector3) {\n        return (point.distanceToSquared(this.center) <= (this.radius * this.radius));\n    }\n\n    distanceToPoint(point: Vector3) {\n        return (point.distanceTo(this.center) - this.radius);\n    }\n\n    intersectsSphere(sphere: Sphere) {\n        const radiusSum = this.radius + sphere.radius;\n        return sphere.center.distanceToSquared(this.center) <= (radiusSum * radiusSum);\n    };\n\n    intersectsBox(box: Sphere) {\n        return box.intersectsSphere(this);\n    };\n\n    clampPoint(point: Vector3, target: Vector3 = new Vector3()) {\n        const deltaLengthSq = this.center.distanceToSquared(point);\n        target.copy(point);\n        if (deltaLengthSq > (this.radius * this.radius)) {\n            target.sub(this.center).normalize();\n            target.multiplyScalar(this.radius).add(this.center);\n        }\n        return target;\n    };\n\n    getBoundingBox(target: Box3 = new Box3()) {\n        target.set(this.center, this.center);\n        target.expandByScalar(this.radius);\n        return target;\n    }\n\n    applyMatrix4(matrix: Matrix4) {\n        this.center.applyMatrix4(matrix);\n        this.radius = this.radius * matrix.getMaxScaleOnAxis();\n        return this;\n    };\n\n    translate(offset: Vector3) {\n        this.center.add(offset);\n        return this;\n    };\n\n    equals(sphere: Sphere) {\n        return sphere.center.equals(this.center) && (sphere.radius === this.radius);\n    }\n}\n\nexport function sphere(\n    center = new Vector3(),\n    radius: number = 0\n) {\n    return new Sphere(center, radius);\n}\n","import { Vector3 } from './Vector3';\nimport { Sphere } from './Sphere';\nimport { Matrix4, Object3D } from '../index';\n\nexport class Box3 {\n    constructor(\n        public min: Vector3 = new Vector3(+Infinity, +Infinity, +Infinity),\n        public max: Vector3 = new Vector3(-Infinity, -Infinity, -Infinity)\n    ) {\n    }\n\n    set(min: Vector3, max: Vector3) {\n        this.min.copy(min);\n        this.max.copy(max);\n        return this\n    }\n\n    clone() {\n        return new Box3().copy(this);\n    }\n\n    copy(box: Box3) {\n        this.min.copy(box.min);\n        this.max.copy(box.max);\n        return this;\n    };\n\n    makeEmpty() {\n        this.min.x = this.min.y = this.min.z = +Infinity;\n        this.max.x = this.max.y = this.max.z = -Infinity;\n        return this;\n    }\n\n    isEmpty() {\n        return (this.max.x < this.min.x) || (this.max.y < this.min.y) || (this.max.z < this.min.z);\n    }\n\n    /**\n     * 获取中心点\n     * @param out\n     */\n    getCenter(out: Vector3 = new Vector3()): Vector3 {\n        return this.isEmpty() ? out.set(0, 0, 0) : out.addVectors(this.min, this.max).multiplyScalar(0.5);\n    };\n\n    /**\n     * 获取对角线向量\n     * @param out\n     */\n    getSize(out: Vector3 = new Vector3()): Vector3 {\n        return this.isEmpty() ? out.set(0, 0, 0) : out.subVectors(this.max, this.min);\n    };\n\n    /**\n     *\n     * @param array 一般是顶点一维数组\n     */\n    setFromArray(array: number[] | Float32Array) {\n\n        let minX = +Infinity;\n        let minY = +Infinity;\n        let minZ = +Infinity;\n\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        let maxZ = -Infinity;\n\n        for (let i = 0, l = array.length; i < l; i += 3) {\n\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (z < minZ) minZ = z;\n\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            if (z > maxZ) maxZ = z;\n\n        }\n\n        this.min.set(minX, minY, minZ);\n        this.max.set(maxX, maxY, maxZ);\n        return this;\n    }\n\n    setFromCenterAndSize(center: Vector3, size: Vector3) {\n        const v1 = new Vector3();\n        const halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n    }\n\n    setFromPoints(points: Vector3[]) {\n        this.makeEmpty();\n        for (let i = 0, il = points.length; i < il; i++) {\n            this.expandByPoint(points[i]);\n        }\n        return this;\n    }\n\n    /// TODO\n    // setFromObject(object: Object3D) {\n    //     this.makeEmpty();\n    //     return this.expandByObject(object);\n    // };\n\n    /**\n     * 为了包含该点坐标\n     * @param point\n     */\n    expandByPoint(point: Vector3) {\n        this.min.min(point);\n        this.max.max(point);\n        return this;\n    };\n\n    /**\n     * 为了xyz分别根据vector进行扩展\n     * @param vector\n     */\n    expandByVector(vector: Vector3) {\n        this.min.sub(vector);\n        this.max.add(vector);\n        return this;\n    };\n\n    expandByScalar(scalar: number) {\n        this.min.addScalar(-scalar);\n        this.max.addScalar(scalar);\n        return this;\n    };\n\n    /// TODO\n    // expandByObject(object: Object3D) {\n    //\n    //     let scope = this;\n    //\n    //     const v1 = new Vector3();\n    //\n    //     object.updateWorldMatrix();\n    //\n    //     traverse(object);\n    //\n    //     function traverse(node: Object3D) {\n    //         //@ts-ignore 自己的先算\n    //         const geometry = node.geometry;\n    //         if (geometry !== undefined && geometry._vertices) {\n    //             const vertices = geometry._vertices;\n    //             for (let i = 0; i < vertices.length; i += 3) {\n    //                 v1.set(vertices[i], vertices[i + 1], vertices[i + 2]).applyMatrix4(node._worldMatrix);\n    //                 scope.expandByPoint(v1);\n    //             }\n    //         }\n    //         //子级递归\n    //         for (let j = 0; j < node.children.length; j++) traverse(node.children[j]);\n    //     }\n    //\n    //     return scope;\n    // };\n\n    containsPoint(point: Vector3) {\n        return !(point.x < this.min.x || point.x > this.max.x ||\n            point.y < this.min.y || point.y > this.max.y ||\n            point.z < this.min.z || point.z > this.max.z);\n    };\n\n    containsBox(box: Box3) {\n        return this.min.x <= box.min.x && box.max.x <= this.max.x &&\n            this.min.y <= box.min.y && box.max.y <= this.max.y &&\n            this.min.z <= box.min.z && box.max.z <= this.max.z;\n    };\n\n    intersectsBox(box: Box3) {\n        return !(box.max.x < this.min.x || box.min.x > this.max.x ||\n            box.max.y < this.min.y || box.min.y > this.max.y ||\n            box.max.z < this.min.z || box.min.z > this.max.z);\n\n    };\n\n    intersectsSphere(sphere: Sphere) {\n        const closestPoint = new Vector3();\n        // Find the point on the AABB closest to the sphere center.\n        this.clampPoint(sphere.center, closestPoint);\n        // If that point is inside the sphere, the AABB and sphere intersect.\n        return closestPoint.distanceToSquared(sphere.center) <= (sphere.radius * sphere.radius);\n    };\n\n    clampPoint(point: Vector3, out: Vector3 = new Vector3()) {\n        return out.copy(point).clamp(this.min, this.max);\n    };\n\n    distanceToPoint(point: Vector3) {\n        const v1 = new Vector3();\n        const clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n    }\n\n    getBoundingSphere(out: Sphere = new Sphere()) {\n        const v1 = new Vector3();\n        this.getCenter(out.center);\n        out.radius = this.getSize(v1).length() * 0.5;\n        return out;\n    }\n\n    intersect(box: Box3) {\n        this.min.max(box.min);\n        this.max.min(box.max);\n        // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n        if (this.isEmpty()) this.makeEmpty();\n        return this;\n\n    }\n\n    union(box: Box3) {\n\n        this.min.min(box.min);\n        this.max.max(box.max);\n\n        return this;\n\n    }\n\n    applyMatrix4(matrix: Matrix4) {\n\n        const points = [\n            new Vector3(),\n            new Vector3(),\n            new Vector3(),\n            new Vector3(),\n            new Vector3(),\n            new Vector3(),\n            new Vector3(),\n            new Vector3()\n        ];\n        // transform of empty box is an empty box.\n        if (this.isEmpty()) return this;\n\n        // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n        points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n        points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n        points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n        points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n        points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n        points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n        points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n        points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n        this.setFromPoints(points);\n        return this;\n    }\n\n    translate(offset: Vector3) {\n\n        this.min.add(offset);\n        this.max.add(offset);\n        return this;\n    }\n\n    equals(box: Box3) {\n        return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n}\n\n\n\n","/*\n * Created by 还有醋v on 2020/9/8.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nlet _lut = [];\nfor (let i = 0; i < 256; i++) {\n    _lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n}\n\n\nexport class _Math {\n    public static DEG2RAD = Math.PI / 180;\n    public static RAD2DEG = 180 / Math.PI;\n\n    constructor() {\n    }\n\n    public static generateUUID() {\n\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n         const d0 = Math.random() * 0xffffffff | 0;\n         const d1 = Math.random() * 0xffffffff | 0;\n         const d2 = Math.random() * 0xffffffff | 0;\n         const d3 = Math.random() * 0xffffffff | 0;\n         const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' +\n            _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' +\n            _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] +\n            _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\n\n        // .toUpperCase() here flattens concatenated strings to save heap memory space.\n        return uuid.toUpperCase();\n\n    }\n\n    public static clamp(value, min, max) {\n\n        return Math.max(min, Math.min(max, value));\n\n    }\n\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n\n    public static euclideanModulo(n, m) {\n\n        return ((n % m) + m) % m;\n\n    }\n\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n\n    public static mapLinear(x, a1, a2, b1, b2) {\n\n        return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\n    }\n\n    // https://en.wikipedia.org/wiki/Linear_interpolation\n\n    public static lerp(x, y, t) {\n\n        return (1 - t) * x + t * y;\n\n    }\n\n    // http://en.wikipedia.org/wiki/Smoothstep\n\n    public static smoothstep(x, min, max) {\n\n        if (x <= min) return 0;\n        if (x >= max) return 1;\n\n        x = (x - min) / (max - min);\n\n        return x * x * (3 - 2 * x);\n\n    }\n\n    public static smootherstep(x, min, max) {\n\n        if (x <= min) return 0;\n        if (x >= max) return 1;\n\n        x = (x - min) / (max - min);\n\n        return x * x * x * (x * (x * 6 - 15) + 10);\n\n    }\n\n    // Random integer from <low, high> interval\n\n    public static randInt(low, high) {\n\n        return low + Math.floor(Math.random() * (high - low + 1));\n\n    }\n\n    // Random float from <low, high> interval\n\n    public staticrandFloat(low, high) {\n\n        return low + Math.random() * (high - low);\n\n    }\n\n    // Random float from <-range/2, range/2> interval\n\n    public static randFloatSpread(range) {\n\n        return range * (0.5 - Math.random());\n\n    }\n\n    public static degToRad(degrees) {\n\n        return degrees * _Math.DEG2RAD;\n\n    }\n\n    public static radToDeg(radians) {\n\n        return radians * _Math.RAD2DEG;\n\n    }\n\n    public static isPowerOfTwo(value) {\n\n        return (value & (value - 1)) === 0 && value !== 0;\n\n    }\n\n    public static ceilPowerOfTwo(value) {\n\n        return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\n    }\n\n    public static floorPowerOfTwo(value) {\n\n        return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\n    }\n\n}\n\n","/*\n * Created by 还有醋v on 2020/9/8.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { _Math } from './Math.js';\n\nconst _colorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'rebeccapurple': 0x663399,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n};\n\nconst _hslA = {h: 0, s: 0, l: 0};\nconst _hslB = {h: 0, s: 0, l: 0};\n\nexport class Color {\n\n    public static NAMES = _colorKeywords;\n\n    public isColor = true;\n\n    public r = 1;\n    public g = 1;\n    public b = 1;\n\n    constructor(r?: number | Color | string, g?, b?) {\n        if (!r) return this;\n        (!g && !b) ? this.set(r) : this.setRGB(r, g, b);\n    }\n\n    set(value) {\n\n        if (value && value.isColor) {\n\n            this.copy(value);\n\n        } else if (typeof value === 'number') {\n\n            this.setHex(value);\n\n        } else if (typeof value === 'string') {\n\n            this.setStyle(value);\n\n        }\n\n        return this;\n\n    }\n\n    setScalar(scalar) {\n\n        this.r = scalar;\n        this.g = scalar;\n        this.b = scalar;\n\n        return this;\n\n    }\n\n    setHex(hex) {\n\n        hex = Math.floor(hex);\n\n        this.r = (hex >> 16 & 255) / 255;\n        this.g = (hex >> 8 & 255) / 255;\n        this.b = (hex & 255) / 255;\n\n        return this;\n\n    }\n\n    setRGB(r, g, b) {\n\n        this.r = r;\n        this.g = g;\n        this.b = b;\n\n        return this;\n\n    }\n\n    setHSL(h, s, l) {\n\n        // h,s,l ranges are in 0.0 - 1.0\n        h = _Math.euclideanModulo(h, 1);\n        s = _Math.clamp(s, 0, 1);\n        l = _Math.clamp(l, 0, 1);\n\n        if (s === 0) {\n\n            this.r = this.g = this.b = l;\n\n        } else {\n\n            const p = l <= 0.5 ? l * (1 + s) : l + s - (l * s);\n            const q = (2 * l) - p;\n\n            this.r = hue2rgb(q, p, h + 1 / 3);\n            this.g = hue2rgb(q, p, h);\n            this.b = hue2rgb(q, p, h - 1 / 3);\n\n        }\n\n        return this;\n\n    }\n\n    setStyle(style) {\n\n        function handleAlpha(string) {\n\n            if (string === undefined) return;\n\n            if (parseFloat(string) < 1) {\n\n                console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\n            }\n\n        }\n\n\n        let m;\n\n        if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n\n            // rgb / hsl\n\n            let color;\n            const name = m[1];\n            const components = m[2];\n\n            switch (name) {\n\n                case 'rgb':\n                case 'rgba':\n\n                    if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n\n                        // rgb(255,0,0) rgba(255,0,0,0.5)\n                        this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n                        this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n                        this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\n                        handleAlpha(color[5]);\n\n                        return this;\n\n                    }\n\n                    if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n\n                        // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n                        this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n                        this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n                        this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\n                        handleAlpha(color[5]);\n\n                        return this;\n\n                    }\n\n                    break;\n\n                case 'hsl':\n                case 'hsla':\n\n                    if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n\n                        // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n                        const h = parseFloat(color[1]) / 360;\n                        const s = parseInt(color[2], 10) / 100;\n                        const l = parseInt(color[3], 10) / 100;\n\n                        handleAlpha(color[5]);\n\n                        return this.setHSL(h, s, l);\n\n                    }\n\n                    break;\n\n            }\n\n        } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n\n            // hex color\n\n            const hex = m[1];\n            const size = hex.length;\n\n            if (size === 3) {\n\n                // #ff0\n                this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n                this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n                this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\n                return this;\n\n            } else if (size === 6) {\n\n                // #ff0000\n                this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n                this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n                this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\n                return this;\n\n            }\n\n        }\n\n        if (style && style.length > 0) {\n\n            return this.setColorName(style);\n\n        }\n\n        return this;\n\n    }\n\n    setColorName(style) {\n\n        // color keywords\n        const hex = _colorKeywords[style];\n\n        if (hex !== undefined) {\n\n            // red\n            this.setHex(hex);\n\n        } else {\n\n            // unknown color\n            console.warn('THREE.Color: Unknown color ' + style);\n\n        }\n\n        return this;\n\n    }\n\n    clone() {\n\n        return new Color(this.r, this.g, this.b);\n\n    }\n\n    copy(color) {\n\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n\n        return this;\n\n    }\n\n    copyGammaToLinear(color, gammaFactor) {\n\n        if (gammaFactor === undefined) gammaFactor = 2.0;\n\n        this.r = Math.pow(color.r, gammaFactor);\n        this.g = Math.pow(color.g, gammaFactor);\n        this.b = Math.pow(color.b, gammaFactor);\n\n        return this;\n\n    }\n\n    copyLinearToGamma(color, gammaFactor) {\n\n        if (gammaFactor === undefined) gammaFactor = 2.0;\n\n        const safeInverse = (gammaFactor > 0) ? (1.0 / gammaFactor) : 1.0;\n\n        this.r = Math.pow(color.r, safeInverse);\n        this.g = Math.pow(color.g, safeInverse);\n        this.b = Math.pow(color.b, safeInverse);\n\n        return this;\n\n    }\n\n    convertGammaToLinear(gammaFactor) {\n\n        this.copyGammaToLinear(this, gammaFactor);\n\n        return this;\n\n    }\n\n    convertLinearToGamma(gammaFactor) {\n\n        this.copyLinearToGamma(this, gammaFactor);\n\n        return this;\n\n    }\n\n    copySRGBToLinear(color) {\n\n        this.r = SRGBToLinear(color.r);\n        this.g = SRGBToLinear(color.g);\n        this.b = SRGBToLinear(color.b);\n\n        return this;\n\n    }\n\n    copyLinearToSRGB(color) {\n\n        this.r = LinearToSRGB(color.r);\n        this.g = LinearToSRGB(color.g);\n        this.b = LinearToSRGB(color.b);\n\n        return this;\n\n    }\n\n    convertSRGBToLinear() {\n\n        this.copySRGBToLinear(this);\n\n        return this;\n\n    }\n\n    convertLinearToSRGB() {\n\n        this.copyLinearToSRGB(this);\n\n        return this;\n\n    }\n\n    getHex() {\n\n        return (this.r * 255) << 16 ^ (this.g * 255) << 8 ^ (this.b * 255) << 0;\n\n    }\n\n    getHexString() {\n\n        return ('000000' + this.getHex().toString(16)).slice(-6);\n\n    }\n\n    getHSL(target) {\n\n        // h,s,l ranges are in 0.0 - 1.0\n\n        if (target === undefined) {\n\n            console.warn('THREE.Color: .getHSL() target is now required');\n            target = {h: 0, s: 0, l: 0};\n\n        }\n\n        const r = this.r, g = this.g, b = this.b;\n\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n\n        let hue, saturation;\n        const lightness = (min + max) / 2.0;\n\n        if (min === max) {\n\n            hue = 0;\n            saturation = 0;\n\n        } else {\n\n            const delta = max - min;\n\n            saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n            switch (max) {\n\n                case r:\n                    hue = (g - b) / delta + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    hue = (b - r) / delta + 2;\n                    break;\n                case b:\n                    hue = (r - g) / delta + 4;\n                    break;\n\n            }\n\n            hue /= 6;\n\n        }\n\n        target.h = hue;\n        target.s = saturation;\n        target.l = lightness;\n\n        return target;\n\n    }\n\n    getStyle() {\n\n        return 'rgb(' + ((this.r * 255) | 0) + ',' + ((this.g * 255) | 0) + ',' + ((this.b * 255) | 0) + ')';\n\n    }\n\n    offsetHSL(h, s, l) {\n\n        this.getHSL(_hslA);\n\n        _hslA.h += h;\n        _hslA.s += s;\n        _hslA.l += l;\n\n        this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\n        return this;\n\n    }\n\n    add(color) {\n\n        this.r += color.r;\n        this.g += color.g;\n        this.b += color.b;\n\n        return this;\n\n    }\n\n    addColors(color1, color2) {\n\n        this.r = color1.r + color2.r;\n        this.g = color1.g + color2.g;\n        this.b = color1.b + color2.b;\n\n        return this;\n\n    }\n\n    addScalar(s) {\n\n        this.r += s;\n        this.g += s;\n        this.b += s;\n\n        return this;\n\n    }\n\n    sub(color) {\n\n        this.r = Math.max(0, this.r - color.r);\n        this.g = Math.max(0, this.g - color.g);\n        this.b = Math.max(0, this.b - color.b);\n\n        return this;\n\n    }\n\n    multiply(color) {\n\n        this.r *= color.r;\n        this.g *= color.g;\n        this.b *= color.b;\n\n        return this;\n\n    }\n\n    multiplyScalar(s) {\n\n        this.r *= s;\n        this.g *= s;\n        this.b *= s;\n\n        return this;\n\n    }\n\n    lerp(color, alpha) {\n\n        this.r += (color.r - this.r) * alpha;\n        this.g += (color.g - this.g) * alpha;\n        this.b += (color.b - this.b) * alpha;\n\n        return this;\n\n    }\n\n    lerpHSL(color, alpha) {\n\n        this.getHSL(_hslA);\n        color.getHSL(_hslB);\n\n        const h = _Math.lerp(_hslA.h, _hslB.h, alpha);\n        const s = _Math.lerp(_hslA.s, _hslB.s, alpha);\n        const l = _Math.lerp(_hslA.l, _hslB.l, alpha);\n\n        this.setHSL(h, s, l);\n\n        return this;\n\n    }\n\n    equals(c) {\n\n        return (c.r === this.r) && (c.g === this.g) && (c.b === this.b);\n\n    }\n\n    fromArray(array, offset = 0) {\n\n        this.r = array[offset];\n        this.g = array[offset + 1];\n        this.b = array[offset + 2];\n\n        return this;\n\n    }\n\n    toArray(array = [], offset = 0) {\n\n        array[offset] = this.r;\n        array[offset + 1] = this.g;\n        array[offset + 2] = this.b;\n\n        return array;\n\n    }\n\n    toJSON() {\n\n        return this.getHex();\n\n    }\n}\n\nfunction hue2rgb(p, q, t) {\n\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n    return p;\n\n}\n\nfunction SRGBToLinear(c) {\n\n    return (c < 0.04045) ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\n}\n\nfunction LinearToSRGB(c) {\n\n    return (c < 0.0031308) ? c * 12.92 : 1.055 * (Math.pow(c, 0.41666)) - 0.055;\n\n}\n\nexport function color(r?, g?, b?) {\n    return new Color(r, g, b);\n}\n","/*\n * Created by 还有醋v on 2020/9/8.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\n/**\n * 取符合范围的值\n * @param value\n * @param min\n * @param max\n */\nexport function clamp(value: number, min: number, max: number) {\n    return Math.max(min, Math.min(max, value));\n}\n","import { Vector3 } from './Vector3';\nimport { clamp } from \"../utils/index\";\n\nexport class Quaternion {\n    private _x: number\n    private _y: number\n    private _z: number\n    private _w: number\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        this._w = w;\n    }\n\n    public static slerp(qa, qb, qm, t) {\n        return qm.copy(qa).slerp(qb, t);\n    }\n\n    public static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\n        // fuzz-free, array-based Quaternion SLERP operation\n\n        let x0 = src0[srcOffset0 + 0],\n            y0 = src0[srcOffset0 + 1],\n            z0 = src0[srcOffset0 + 2],\n            w0 = src0[srcOffset0 + 3],\n\n            x1 = src1[srcOffset1 + 0],\n            y1 = src1[srcOffset1 + 1],\n            z1 = src1[srcOffset1 + 2],\n            w1 = src1[srcOffset1 + 3];\n\n        if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\n            let s = 1 - t,\n\n                cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n                dir = (cos >= 0 ? 1 : -1),\n                sqrSin = 1 - cos * cos;\n\n            // Skip the Slerp for tiny steps to avoid numeric problems:\n            if (sqrSin > /*Number.EPSILON*/0.0000000000000000001) {\n\n                const sin = Math.sqrt(sqrSin),\n                    len = Math.atan2(sin, cos * dir);\n\n                s = Math.sin(s * len) / sin;\n                t = Math.sin(t * len) / sin;\n\n            }\n\n            const tDir = t * dir;\n\n            x0 = x0 * s + x1 * tDir;\n            y0 = y0 * s + y1 * tDir;\n            z0 = z0 * s + z1 * tDir;\n            w0 = w0 * s + w1 * tDir;\n\n            // Normalize in case we just did a lerp:\n            if (s === 1 - t) {\n\n                const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\n                x0 *= f;\n                y0 *= f;\n                z0 *= f;\n                w0 *= f;\n\n            }\n\n        }\n\n        dst[dstOffset] = x0;\n        dst[dstOffset + 1] = y0;\n        dst[dstOffset + 2] = z0;\n        dst[dstOffset + 3] = w0;\n\n    }\n\n    get x(): number {\n        return this._x\n    }\n\n    set x(value) {\n        this._x = value;\n        this.onChangeCallback();\n    }\n\n    get y(): number {\n        return this._y\n    }\n\n    set y(value) {\n        this._y = value;\n        this.onChangeCallback();\n    }\n\n    get z(): number {\n        return this._z\n    }\n\n    set z(value) {\n        this._z = value;\n        this.onChangeCallback();\n    }\n\n    get w(): number {\n        return this._w\n    }\n\n    set w(value) {\n        this._w = value;\n        this.onChangeCallback();\n    }\n\n    set(x, y, z, w) {\n\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        this._w = w;\n        this.onChangeCallback();\n        return this;\n    }\n\n    clone() {\n\n        return new Quaternion(this._x, this._y, this._z, this._w);\n    }\n\n    copy(quaternion) {\n\n        this._x = quaternion.x;\n        this._y = quaternion.y;\n        this._z = quaternion.z;\n        this._w = quaternion.w;\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    setFromEuler(euler, update?) {\n\n        const x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\n        const cos = Math.cos;\n        const sin = Math.sin;\n\n        const c1 = cos(x / 2);\n        const c2 = cos(y / 2);\n        const c3 = cos(z / 2);\n\n        const s1 = sin(x / 2);\n        const s2 = sin(y / 2);\n        const s3 = sin(z / 2);\n\n        if (order === 'XYZ') {\n\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n        } else if (order === 'YXZ') {\n\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n        } else if (order === 'ZXY') {\n\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n        } else if (order === 'ZYX') {\n\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n        } else if (order === 'YZX') {\n\n            this._x = s1 * c2 * c3 + c1 * s2 * s3;\n            this._y = c1 * s2 * c3 + s1 * c2 * s3;\n            this._z = c1 * c2 * s3 - s1 * s2 * c3;\n            this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n        } else if (order === 'XZY') {\n\n            this._x = s1 * c2 * c3 - c1 * s2 * s3;\n            this._y = c1 * s2 * c3 - s1 * c2 * s3;\n            this._z = c1 * c2 * s3 + s1 * s2 * c3;\n            this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n        }\n\n        if (update !== false) this.onChangeCallback();\n\n        return this;\n\n    }\n\n    setFromAxisAngle(axis, angle) {\n\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n        // assumes axis is normalized\n\n        const halfAngle = angle / 2, s = Math.sin(halfAngle);\n\n        this._x = axis.x * s;\n        this._y = axis.y * s;\n        this._z = axis.z * s;\n        this._w = Math.cos(halfAngle);\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    setFromRotationMatrix(m) {\n\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        const te = m.elements,\n            m11 = te[0], m12 = te[4], m13 = te[8],\n            m21 = te[1], m22 = te[5], m23 = te[9],\n            m31 = te[2], m32 = te[6], m33 = te[10],\n            trace = m11 + m22 + m33;\n\n        let s;\n\n        if (trace > 0) {\n\n            s = 0.5 / Math.sqrt(trace + 1.0);\n\n            this._w = 0.25 / s;\n            this._x = (m32 - m23) * s;\n            this._y = (m13 - m31) * s;\n            this._z = (m21 - m12) * s;\n\n        } else if (m11 > m22 && m11 > m33) {\n\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n            this._w = (m32 - m23) / s;\n            this._x = 0.25 * s;\n            this._y = (m12 + m21) / s;\n            this._z = (m13 + m31) / s;\n\n        } else if (m22 > m33) {\n\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n            this._w = (m13 - m31) / s;\n            this._x = (m12 + m21) / s;\n            this._y = 0.25 * s;\n            this._z = (m23 + m32) / s;\n\n        } else {\n\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n            this._w = (m21 - m12) / s;\n            this._x = (m13 + m31) / s;\n            this._y = (m23 + m32) / s;\n            this._z = 0.25 * s;\n\n        }\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    setFromUnitVectors = function() {\n\n        // assumes direction vectors vFrom and vTo are normalized\n\n        let v1 = new Vector3();\n        let r;\n\n        const EPS = 0.000001;\n\n        return function setFromUnitVectors(vFrom, vTo) {\n\n            if (v1 === undefined) v1 = new Vector3();\n\n            r = vFrom.dot(vTo) + 1;\n\n            if (r < EPS) {\n\n                r = 0;\n\n                if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\n                    v1.set(-vFrom.y, vFrom.x, 0);\n\n                } else {\n\n                    v1.set(0, -vFrom.z, vFrom.y);\n\n                }\n\n            } else {\n\n                v1.crossVectors(vFrom, vTo);\n\n            }\n\n            this._x = v1.x;\n            this._y = v1.y;\n            this._z = v1.z;\n            this._w = r;\n\n            return this.normalize();\n\n        };\n\n    }()\n\n    angleTo(q) {\n\n        return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\n    }\n\n    rotateTowards(q, step) {\n\n        const angle = this.angleTo(q);\n\n        if (angle === 0) return this;\n\n        const t = Math.min(1, step / angle);\n\n        this.slerp(q, t);\n\n        return this;\n\n    }\n\n    inverse() {\n\n        // quaternion is assumed to have unit length\n\n        return this.conjugate();\n\n    }\n\n    conjugate() {\n\n        this._x *= -1;\n        this._y *= -1;\n        this._z *= -1;\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    dot(v) {\n\n        return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n    }\n\n    lengthSq() {\n\n        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n    }\n\n    length() {\n\n        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\n    }\n\n    normalize() {\n\n        let l = this.length();\n\n        if (l === 0) {\n\n            this._x = 0;\n            this._y = 0;\n            this._z = 0;\n            this._w = 1;\n\n        } else {\n\n            l = 1 / l;\n\n            this._x = this._x * l;\n            this._y = this._y * l;\n            this._z = this._z * l;\n            this._w = this._w * l;\n\n        }\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    multiply(q, p) {\n\n        if (p !== undefined) {\n\n            console.warn('');\n            return this.multiplyQuaternions(q, p);\n\n        }\n\n        return this.multiplyQuaternions(this, q);\n\n    }\n\n    premultiply(q) {\n\n        return this.multiplyQuaternions(q, this);\n\n    }\n\n    multiplyQuaternions(a, b) {\n\n        // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n        const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n        const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n        this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n        this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n        this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n        this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n        this.onChangeCallback();\n        return this;\n    }\n\n    slerp(qb, t) {\n\n        if (t === 0) return this;\n        if (t === 1) return this.copy(qb);\n\n        const x = this._x, y = this._y, z = this._z, w = this._w;\n\n        // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n        let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n        if (cosHalfTheta < 0) {\n\n            this._w = -qb._w;\n            this._x = -qb._x;\n            this._y = -qb._y;\n            this._z = -qb._z;\n\n            cosHalfTheta = -cosHalfTheta;\n\n        } else {\n\n            this.copy(qb);\n\n        }\n\n        if (cosHalfTheta >= 1.0) {\n\n            this._w = w;\n            this._x = x;\n            this._y = y;\n            this._z = z;\n\n            return this;\n\n        }\n\n        const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n        if (sqrSinHalfTheta <= /*Number.EPSILON*/0.0000000000001) {\n\n            const s = 1 - t;\n            this._w = s * w + t * this._w;\n            this._x = s * x + t * this._x;\n            this._y = s * y + t * this._y;\n            this._z = s * z + t * this._z;\n\n            return this.normalize();\n\n        }\n\n        const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n        const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n        const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n            ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\n        this._w = (w * ratioA + this._w * ratioB);\n        this._x = (x * ratioA + this._x * ratioB);\n        this._y = (y * ratioA + this._y * ratioB);\n        this._z = (z * ratioA + this._z * ratioB);\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    equals(quaternion) {\n\n        return (quaternion._x === this._x) && (quaternion._y === this._y) && (quaternion._z === this._z) && (quaternion._w === this._w);\n\n    }\n\n    fromArray(array, offset = 0) {\n\n        this._x = array[offset];\n        this._y = array[offset + 1];\n        this._z = array[offset + 2];\n        this._w = array[offset + 3];\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    toArray(array = [], offset = 0) {\n\n        array[offset] = this._x;\n        array[offset + 1] = this._y;\n        array[offset + 2] = this._z;\n        array[offset + 3] = this._w;\n\n        return array;\n\n    }\n\n    onChange(callback) {\n\n        this.onChangeCallback = callback;\n\n        return this;\n\n    }\n\n    private onChangeCallback() {\n    }\n\n}\n\nexport function quat(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n    return new Quaternion(x, y, z, w);\n}\n","import { Quaternion } from './Quaternion';\nimport { Vector3 } from './Vector3';\nimport { Matrix4 } from './Matrix4';\nimport { clamp } from \"../utils/index\";\n\nexport enum RotationOrders {\n    XYZ = \"XYZ\",\n    YZX = 'YZX',\n    ZXY = 'ZXY',\n    XZY = 'XZY',\n    YXZ = 'YXZ',\n    ZYX = 'ZYX'\n}\n\n\nexport class Euler {\n\n    constructor(\n        private _x: number = 0,\n        private _y: number = 0,\n        private _z: number = 0,\n        private _order: RotationOrders = RotationOrders.XYZ\n    ) {\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    set x(value) {\n        this._x = value;\n        this.onChangeCallback();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(value) {\n        this._y = value;\n        this.onChangeCallback();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(value) {\n        this._z = value;\n        this.onChangeCallback();\n\n    }\n\n    get order() {\n        return this._order;\n    }\n\n    set order(value) {\n        this._order = value;\n        this.onChangeCallback();\n    }\n\n    set(x, y, z, order) {\n\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        this._order = order || this._order;\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    clone() {\n        return new Euler(this._x, this._y, this._z, this._order);\n    }\n\n    copy(euler: Euler) {\n\n        this._x = euler._x;\n        this._y = euler._y;\n        this._z = euler._z;\n        this._order = euler._order;\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    setFromRotationMatrix(m: Matrix4, order: RotationOrders, update) {\n        // const clamp = _Math.clamp;\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        const te = m.elements;\n        const m11 = te[0], m12 = te[4], m13 = te[8];\n        const m21 = te[1], m22 = te[5], m23 = te[9];\n        const m31 = te[2], m32 = te[6], m33 = te[10];\n\n        order = order || this._order;\n\n        if (order === 'XYZ') {\n\n            this._y = Math.asin(clamp(m13, -1, 1));\n\n            if (Math.abs(m13) < 0.99999) {\n\n                this._x = Math.atan2(-m23, m33);\n                this._z = Math.atan2(-m12, m11);\n\n            } else {\n\n                this._x = Math.atan2(m32, m22);\n                this._z = 0;\n\n            }\n\n        } else if (order === 'YXZ') {\n\n            this._x = Math.asin(-clamp(m23, -1, 1));\n\n            if (Math.abs(m23) < 0.99999) {\n\n                this._y = Math.atan2(m13, m33);\n                this._z = Math.atan2(m21, m22);\n\n            } else {\n\n                this._y = Math.atan2(-m31, m11);\n                this._z = 0;\n\n            }\n\n        } else if (order === 'ZXY') {\n\n            this._x = Math.asin(clamp(m32, -1, 1));\n\n            if (Math.abs(m32) < 0.99999) {\n\n                this._y = Math.atan2(-m31, m33);\n                this._z = Math.atan2(-m12, m22);\n\n            } else {\n\n                this._y = 0;\n                this._z = Math.atan2(m21, m11);\n\n            }\n\n        } else if (order === 'ZYX') {\n\n            this._y = Math.asin(-clamp(m31, -1, 1));\n\n            if (Math.abs(m31) < 0.99999) {\n\n                this._x = Math.atan2(m32, m33);\n                this._z = Math.atan2(m21, m11);\n\n            } else {\n\n                this._x = 0;\n                this._z = Math.atan2(-m12, m22);\n\n            }\n\n        } else if (order === 'YZX') {\n\n            this._z = Math.asin(clamp(m21, -1, 1));\n\n            if (Math.abs(m21) < 0.99999) {\n\n                this._x = Math.atan2(-m23, m22);\n                this._y = Math.atan2(-m31, m11);\n\n            } else {\n\n                this._x = 0;\n                this._y = Math.atan2(m13, m33);\n\n            }\n\n        } else if (order === 'XZY') {\n\n            this._z = Math.asin(-clamp(m12, -1, 1));\n\n            if (Math.abs(m12) < 0.99999) {\n\n                this._x = Math.atan2(m32, m22);\n                this._y = Math.atan2(m13, m11);\n\n            } else {\n\n                this._x = Math.atan2(-m23, m33);\n                this._y = 0;\n\n            }\n\n        } else {\n\n            console.warn('Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n\n        }\n\n        this._order = order;\n\n        if (update !== false) this.onChangeCallback();\n\n        return this;\n    }\n\n    setFromQuaternion(q: Quaternion, order, update?) {\n\n        const matrix = new Matrix4();\n\n        matrix.makeRotationFromQuaternion(q);\n\n        return this.setFromRotationMatrix(matrix, order, update);\n\n    }\n\n    setFromVector3(v, order: RotationOrders) {\n        return this.set(v.x, v.y, v.z, order || this._order);\n    }\n\n    reorder(newOrder) {\n\n        // WARNING: this discards revolution information -bhouston\n\n        const q = new Quaternion();\n\n        q.setFromEuler(this);\n\n        return this.setFromQuaternion(q, newOrder);\n\n    }\n\n    equals(euler) {\n\n        return (euler._x === this._x) && (euler._y === this._y) && (euler._z === this._z) && (euler._order === this._order);\n\n    }\n\n    fromArray(array) {\n\n        this._x = array[0];\n        this._y = array[1];\n        this._z = array[2];\n        if (array[3] !== undefined) this._order = array[3];\n\n        this.onChangeCallback();\n\n        return this;\n\n    }\n\n    toArray(array = [], offset = 0) {\n\n        array[offset] = this._x;\n        array[offset + 1] = this._y;\n        array[offset + 2] = this._z;\n        array[offset + 3] = this._order;\n\n        return array;\n\n    }\n\n    toVector3(optionalResult) {\n\n        if (optionalResult) {\n\n            return optionalResult.set(this._x, this._y, this._z);\n\n        } else {\n\n            return new Vector3(this._x, this._y, this._z);\n\n        }\n\n    }\n\n    onChange(callback) {\n\n        this.onChangeCallback = callback;\n\n        return this;\n\n    }\n\n    onChangeCallback() {\n\n    }\n}\n\nexport function euler(\n    x: number = 0,\n    y: number = 0,\n    z: number = 0,\n    order: RotationOrders = RotationOrders.XYZ\n) {\n    return new Euler(x, y, z, order);\n}\n","/*\n * Created by 还有醋v on 2020/9/8.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\nimport { Vector3 } from \"./Vector3\";\n\nconst _vector = new Vector3();\n\nexport class Matrix3 {\n    public elements: Float32Array\n\n    public readonly isMatrix3: true;\n\n    constructor(\n        m00: number | Float32Array | number[] = 1, m01: number = 0, m02: number = 0,\n        m10: number = 0, m11: number = 1, m12: number = 0,\n        m20: number = 0, m21: number = 0, m22: number = 1,\n    ) {\n        if (m00 instanceof Float32Array) {\n            this.elements = m00;\n        } else if (Array.isArray(m00)) {\n            this.elements = new Float32Array(m00);\n        } else {\n            this.elements = new Float32Array([\n                m00, m01, m02,\n                m10, m11, m12,\n                m20, m21, m22,\n            ]);\n        }\n\n        // this.elements = new Float32Array([\n        //     1, 0, 0,\n        //     0, 1, 0,\n        //     0, 0, 1\n        // ]);\n    }\n\n    public set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n        const te = this.elements;\n        te[0] = n11;\n        te[1] = n21;\n        te[2] = n31;\n        te[3] = n12;\n        te[4] = n22;\n        te[5] = n32;\n        te[6] = n13;\n        te[7] = n23;\n        te[8] = n33;\n        return this;\n    }\n\n    public identity() {\n        this.set(\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1\n        );\n        return this;\n    }\n\n    clone() {\n\n        return new Matrix3().fromArray(this.elements);\n\n    }\n\n    copy(m) {\n\n        const te = this.elements;\n        const me = m.elements;\n\n        te[0] = me[0];\n        te[1] = me[1];\n        te[2] = me[2];\n        te[3] = me[3];\n        te[4] = me[4];\n        te[5] = me[5];\n        te[6] = me[6];\n        te[7] = me[7];\n        te[8] = me[8];\n\n        return this;\n\n    }\n\n\n    setFromMatrix4(m) {\n\n        const me = m.elements;\n\n        this.set(\n            me[0], me[4], me[8],\n            me[1], me[5], me[9],\n            me[2], me[6], me[10]\n        );\n\n        return this;\n\n    }\n\n    applyToBufferAttribute(attribute) {\n\n        for (let i = 0, l = attribute.count; i < l; i++) {\n\n            _vector.x = attribute.getX(i);\n            _vector.y = attribute.getY(i);\n            _vector.z = attribute.getZ(i);\n\n            _vector.applyMatrix3(this);\n\n            attribute.setXYZ(i, _vector.x, _vector.y, _vector.z);\n\n        }\n\n        return attribute;\n\n    }\n\n    multiply(m) {\n        return this.multiplyMatrices(this, m);\n    }\n\n    premultiply(m) {\n        return this.multiplyMatrices(m, this);\n    }\n\n    multiplyMatrices(a, b) {\n\n        const ae = a.elements;\n        const be = b.elements;\n        const te = this.elements;\n\n        const a11 = ae[0], a12 = ae[3], a13 = ae[6];\n        const a21 = ae[1], a22 = ae[4], a23 = ae[7];\n        const a31 = ae[2], a32 = ae[5], a33 = ae[8];\n\n        const b11 = be[0], b12 = be[3], b13 = be[6];\n        const b21 = be[1], b22 = be[4], b23 = be[7];\n        const b31 = be[2], b32 = be[5], b33 = be[8];\n\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n        te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n        te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n        te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n        te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n        te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n        te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\n        return this;\n\n    }\n\n    multiplyScalar(s) {\n        const te = this.elements;\n        te[0] *= s;\n        te[3] *= s;\n        te[6] *= s;\n        te[1] *= s;\n        te[4] *= s;\n        te[7] *= s;\n        te[2] *= s;\n        te[5] *= s;\n        te[8] *= s;\n        return this;\n    }\n\n    determinant() {\n\n        const te = this.elements;\n\n        const a = te[0], b = te[1], c = te[2],\n            d = te[3], e = te[4], f = te[5],\n            g = te[6], h = te[7], i = te[8];\n\n        return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n    }\n\n    getInverse(matrix, throwOnDegenerate = false) {\n\n        const me = matrix.elements,\n            te = this.elements,\n\n            n11 = me[0], n21 = me[1], n31 = me[2],\n            n12 = me[3], n22 = me[4], n32 = me[5],\n            n13 = me[6], n23 = me[7], n33 = me[8],\n\n            t11 = n33 * n22 - n32 * n23,\n            t12 = n32 * n13 - n33 * n12,\n            t13 = n23 * n12 - n22 * n13,\n\n            det = n11 * t11 + n21 * t12 + n31 * t13;\n\n        if (det === 0) {\n\n            const msg = \"Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n            if (throwOnDegenerate === true) {\n\n                throw new Error(msg);\n\n            } else {\n\n                console.warn(msg);\n\n            }\n\n            return this.identity();\n\n        }\n\n        const detInv = 1 / det;\n\n        te[0] = t11 * detInv;\n        te[1] = (n31 * n23 - n33 * n21) * detInv;\n        te[2] = (n32 * n21 - n31 * n22) * detInv;\n\n        te[3] = t12 * detInv;\n        te[4] = (n33 * n11 - n31 * n13) * detInv;\n        te[5] = (n31 * n12 - n32 * n11) * detInv;\n\n        te[6] = t13 * detInv;\n        te[7] = (n21 * n13 - n23 * n11) * detInv;\n        te[8] = (n22 * n11 - n21 * n12) * detInv;\n\n        return this;\n\n    }\n\n    transpose() {\n\n        let tmp, m = this.elements;\n\n        tmp = m[1];\n        m[1] = m[3];\n        m[3] = tmp;\n        tmp = m[2];\n        m[2] = m[6];\n        m[6] = tmp;\n        tmp = m[5];\n        m[5] = m[7];\n        m[7] = tmp;\n\n        return this;\n\n    }\n\n    getNormalMatrix(matrix4) {\n\n        return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n\n    }\n\n    transposeIntoArray(r) {\n\n        const m = this.elements;\n\n        r[0] = m[0];\n        r[1] = m[3];\n        r[2] = m[6];\n        r[3] = m[1];\n        r[4] = m[4];\n        r[5] = m[7];\n        r[6] = m[2];\n        r[7] = m[5];\n        r[8] = m[8];\n\n        return this;\n\n    }\n\n    setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\n        const c = Math.cos(rotation);\n        const s = Math.sin(rotation);\n\n        this.set(\n            sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx,\n            -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty,\n            0, 0, 1\n        );\n\n    }\n\n    scale(sx, sy) {\n\n        const te = this.elements;\n\n        te[0] *= sx;\n        te[3] *= sx;\n        te[6] *= sx;\n        te[1] *= sy;\n        te[4] *= sy;\n        te[7] *= sy;\n\n        return this;\n\n    }\n\n    rotate(theta) {\n\n        const c = Math.cos(theta);\n        const s = Math.sin(theta);\n\n        const te = this.elements;\n\n        const a11 = te[0], a12 = te[3], a13 = te[6];\n        const a21 = te[1], a22 = te[4], a23 = te[7];\n\n        te[0] = c * a11 + s * a21;\n        te[3] = c * a12 + s * a22;\n        te[6] = c * a13 + s * a23;\n\n        te[1] = -s * a11 + c * a21;\n        te[4] = -s * a12 + c * a22;\n        te[7] = -s * a13 + c * a23;\n\n        return this;\n\n    }\n\n    translate(tx, ty) {\n\n        const te = this.elements;\n\n        te[0] += tx * te[2];\n        te[3] += tx * te[5];\n        te[6] += tx * te[8];\n        te[1] += ty * te[2];\n        te[4] += ty * te[5];\n        te[7] += ty * te[8];\n\n        return this;\n\n    }\n\n    equals(matrix) {\n\n        const te = this.elements;\n        const me = matrix.elements;\n\n        for (let i = 0; i < 9; i++) {\n\n            if (te[i] !== me[i]) return false;\n\n        }\n\n        return true;\n\n    }\n\n    fromArray(array, offset = 0) {\n\n        for (let i = 0; i < 9; i++) {\n            this.elements[i] = array[i + offset];\n        }\n\n        return this;\n    }\n\n    toArray(array = [], offset = 0) {\n\n        const te = this.elements;\n\n        array[offset] = te[0];\n        array[offset + 1] = te[1];\n        array[offset + 2] = te[2];\n\n        array[offset + 3] = te[3];\n        array[offset + 4] = te[4];\n        array[offset + 5] = te[5];\n\n        array[offset + 6] = te[6];\n        array[offset + 7] = te[7];\n        array[offset + 8] = te[8];\n\n        return array;\n\n    }\n\n}\n\nexport function mat3(\n    m00: number | Float32Array | number[] = 1, m01: number = 0, m02: number = 0,\n    m10: number = 0, m11: number = 1, m12: number = 0,\n    m20: number = 0, m21: number = 0, m22: number = 1,\n) {\n    return new Matrix3(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n}\n","import { Vector3 } from './Vector3';\nimport { Sphere } from './Sphere';\nimport { Box3 } from './Box3';\nimport { Matrix4 } from './Matrix4';\n\nexport class Ray {\n    constructor(\n        public origin: Vector3 = new Vector3(),\n        public direction: Vector3 = new Vector3()\n    ) {\n    }\n\n    set(origin: Vector3, direction: Vector3) {\n        this.origin.copy(origin);\n        this.direction.copy(direction);\n        return this;\n    }\n\n    clone() {\n        return new Ray().copy(this);\n    }\n\n    copy(ray: Ray) {\n        this.origin.copy(ray.origin);\n        this.direction.copy(ray.direction);\n        return this;\n    }\n\n    at(t: number, target: Vector3) {\n        return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n    }\n\n    lookAt(v: Vector3) {\n        this.direction.copy(v).sub(this.origin).normalize();\n        return this;\n    }\n\n    recast(t: number) {\n        const v1 = new Vector3();\n        this.origin.copy(this.at(t, v1));\n        return this;\n    }\n\n    closestPointToPoint(point: Vector3, out: Vector3 = new Vector3()) {\n\n        out.subVectors(point, this.origin);\n\n        const directionDistance = out.dot(this.direction);\n\n        if (directionDistance < 0) return out.copy(this.origin);\n\n        return out.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    }\n\n    distanceToPoint(point: Vector3) {\n        return Math.sqrt(this.distanceSqToPoint(point));\n    }\n\n    distanceSqToPoint(point: Vector3) {\n\n        const v1 = new Vector3();\n\n        const directionDistance = v1.subVectors(point, this.origin).dot(this.direction);\n\n        // point behind the ray\n\n        if (directionDistance < 0) {\n\n            return this.origin.distanceToSquared(point);\n\n        }\n\n        v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n        return v1.distanceToSquared(point);\n\n    };\n\n    intersectSphere(sphere: Sphere, out: Vector3) {\n\n        const v1 = new Vector3();\n        v1.subVectors(sphere.center, this.origin);\n        const tca = v1.dot(this.direction);\n        const d2 = v1.dot(v1) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n\n        if (d2 > radius2) return null;\n\n        const thc = Math.sqrt(radius2 - d2);\n\n        // t0 = first intersect point - entrance on front of sphere\n        const t0 = tca - thc;\n\n        // t1 = second intersect point - exit point on back of sphere\n        const t1 = tca + thc;\n\n        // test to see if both t0 and t1 are behind the ray - if so, return null\n        if (t0 < 0 && t1 < 0) return null;\n\n        // test to see if t0 is behind the ray:\n        // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n        // in order to always return an intersect point that is in front of the ray.\n        if (t0 < 0) return this.at(t1, out);\n\n        // else t0 is in front of the ray, so return the first collision point scaled by t0\n        return this.at(t0, out);\n    };\n\n    intersectsSphere(sphere: Sphere) {\n        return this.distanceSqToPoint(sphere.center) <= (sphere.radius * sphere.radius);\n    }\n\n    intersectBox(box: Box3, out: Vector3) {\n\n        let tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n        const invdirx = 1 / this.direction.x,\n            invdiry = 1 / this.direction.y,\n            invdirz = 1 / this.direction.z;\n\n        const origin = this.origin;\n\n        if (invdirx >= 0) {\n\n            tmin = (box.min.x - origin.x) * invdirx;\n            tmax = (box.max.x - origin.x) * invdirx;\n\n        } else {\n\n            tmin = (box.max.x - origin.x) * invdirx;\n            tmax = (box.min.x - origin.x) * invdirx;\n\n        }\n\n        if (invdiry >= 0) {\n\n            tymin = (box.min.y - origin.y) * invdiry;\n            tymax = (box.max.y - origin.y) * invdiry;\n\n        } else {\n\n            tymin = (box.max.y - origin.y) * invdiry;\n            tymax = (box.min.y - origin.y) * invdiry;\n\n        }\n\n        if ((tmin > tymax) || (tymin > tmax)) return null;\n\n        // These lines also handle the case where tmin or tmax is NaN\n        // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n        if (tymin > tmin || tmin !== tmin) tmin = tymin;\n\n        if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n        if (invdirz >= 0) {\n\n            tzmin = (box.min.z - origin.z) * invdirz;\n            tzmax = (box.max.z - origin.z) * invdirz;\n\n        } else {\n\n            tzmin = (box.max.z - origin.z) * invdirz;\n            tzmax = (box.min.z - origin.z) * invdirz;\n\n        }\n\n        if ((tmin > tzmax) || (tzmin > tmax)) return null;\n\n        if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\n        if (tzmax < tmax || tmax !== tmax) tmax = tzmax;\n\n        //return point closest to the ray (positive side)\n\n        if (tmax < 0) return null;\n\n        return this.at(tmin >= 0 ? tmin : tmax, out);\n\n    }\n\n    intersectsBox(box: Box3) {\n        return this.intersectBox(box, new Vector3()) !== null;\n    };\n\n    intersectTriangle(\n        a: Vector3,\n        b: Vector3,\n        c: Vector3,\n        backfaceCulling: boolean,\n        out: Vector3\n    ) {\n\n        // Compute the offset origin, edges, and normal.\n        const diff = new Vector3();\n        const edge1 = new Vector3();\n        const edge2 = new Vector3();\n        const normal = new Vector3();\n\n\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n        edge1.subVectors(b, a);\n        edge2.subVectors(c, a);\n        normal.crossVectors(edge1, edge2);\n\n        // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n        // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n        //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n        //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n        //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n        let DdN = this.direction.dot(normal);\n        let sign;\n\n        if (DdN > 0) {\n\n            if (backfaceCulling) return null;\n            sign = 1;\n\n        } else if (DdN < 0) {\n\n            sign = -1;\n            DdN = -DdN;\n\n        } else {\n\n            return null;\n\n        }\n\n        diff.subVectors(this.origin, a);\n        const DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2));\n\n        // b1 < 0, no intersection\n        if (DdQxE2 < 0) {\n\n            return null;\n\n        }\n\n        const DdE1xQ = sign * this.direction.dot(edge1.cross(diff));\n\n        // b2 < 0, no intersection\n        if (DdE1xQ < 0) {\n\n            return null;\n\n        }\n\n        // b1+b2 > 1, no intersection\n        if (DdQxE2 + DdE1xQ > DdN) {\n\n            return null;\n\n        }\n\n        // Line intersects triangle, check if ray does.\n        const QdN = -sign * diff.dot(normal);\n\n        // t < 0, no intersection\n        if (QdN < 0) {\n\n            return null;\n\n        }\n\n        // Ray intersects triangle.\n        return this.at(QdN / DdN, out);\n\n    };\n\n\n    applyMatrix4(matrix4: Matrix4) {\n        this.origin.applyMatrix4(matrix4);\n        this.direction.transformDirection(matrix4);\n        return this;\n    };\n\n    equals(ray: Ray) {\n        return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n}\n\nexport function ray(\n    origin: Vector3 = new Vector3(),\n    direction: Vector3 = new Vector3()\n) {\n    return new Ray(origin, direction);\n}\n","export class Vector2 {\n    constructor(\n        public x: number = 0,\n        public y: number = x,\n    ) {\n    }\n\n    set(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n        return this;\n    };\n\n    copy(v: Vector2) {\n        this.x = v.x;\n        this.y = v.y;\n        return this\n    }\n\n    clone() {\n        return new Vector2(this.x, this.y)\n    }\n\n\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n    };\n\n    addScalar(s) {\n        this.x += s;\n        this.y += s;\n        return this;\n    }\n\n    addVectors(a, b) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        return this;\n    }\n\n    addScaledVector(v, s) {\n        this.x += v.x * s;\n        this.y += v.y * s;\n        return this;\n    }\n\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n    }\n\n    subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        return this;\n    }\n\n    subVectors(a, b) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        return this;\n    }\n\n    multiply(v) {\n        this.x *= v.x;\n        this.y *= v.y;\n        return this;\n    }\n\n    multiplyScalar(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n        return this;\n    }\n\n    divide(v) {\n        this.x /= v.x;\n        this.y /= v.y;\n        return this;\n    }\n\n    divideScalar(scalar) {\n        return this.multiplyScalar(1 / scalar);\n    }\n\n    applyMatrix3(m) {\n        const x = this.x, y = this.y;\n        const e = m.elements;\n        this.x = e[0] * x + e[3] * y + e[6];\n        this.y = e[1] * x + e[4] * y + e[7];\n        return this;\n    }\n\n    dot(v) {\n        return this.x * v.x + this.y * v.y;\n    }\n\n    cross(v) {\n        return this.x * v.y - this.y * v.x;\n    }\n\n    lengthSq() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    manhattanLength() {\n        return Math.abs(this.x) + Math.abs(this.y);\n    }\n\n    normalize() {\n        return this.divideScalar(this.length() || 1);\n    }\n\n    angle() {\n        // computes the angle in radians with respect to the positive x-axis\n        let angle = Math.atan2(this.y, this.x);\n        if (angle < 0) angle += 2 * Math.PI;\n        return angle;\n    }\n\n    distanceTo(v) {\n        return Math.sqrt(this.distanceToSquared(v));\n    }\n\n    distanceToSquared(v) {\n        const dx = this.x - v.x, dy = this.y - v.y;\n        return dx * dx + dy * dy;\n    }\n\n    manhattanDistanceTo(v) {\n        return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    }\n\n    setLength(length) {\n        return this.normalize().multiplyScalar(length);\n    }\n\n    lerp(v, alpha) {\n        this.x += (v.x - this.x) * alpha;\n        this.y += (v.y - this.y) * alpha;\n        return this;\n    }\n\n    lerpVectors(v1, v2, alpha) {\n        return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    }\n\n    equals(v) {\n        return ((v.x === this.x) && (v.y === this.y));\n    }\n\n    fromArray(array, offset = 0) {\n        this.x = array[offset];\n        this.y = array[offset + 1];\n        return this;\n    }\n\n    toArray(array = [], offset = 0) {\n        array[offset] = this.x;\n        array[offset + 1] = this.y;\n        return array;\n    }\n}\n\n/**\n * 一个快速创建的方法\n * @returns {Vector2}\n */\nexport function v2(x = 0, y = x) {\n    return new Vector2(x, y);\n}\n\n\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nexport class EventDispatcher {\n\n    private _listeners = {};\n\n    constructor() {\n    }\n\n    addEventListener(type: string, listener) {\n\n        if (this._listeners === undefined) this._listeners = {};\n\n        var listeners = this._listeners;\n\n        if (listeners[type] === undefined) {\n\n            listeners[type] = [];\n\n        }\n\n        if (listeners[type].indexOf(listener) === -1) {\n\n            listeners[type].push(listener);\n\n        }\n\n    }\n\n    hasEventListener(type: string, listener) {\n\n        if (this._listeners === undefined) return false;\n\n        var listeners = this._listeners;\n\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\n    }\n\n    removeEventListener(type: string, listener) {\n\n        if (this._listeners === undefined) return;\n\n        var listeners = this._listeners;\n        var listenerArray = listeners[type];\n\n        if (listenerArray !== undefined) {\n\n            var index = listenerArray.indexOf(listener);\n\n            if (index !== -1) {\n\n                listenerArray.splice(index, 1);\n\n            }\n\n        }\n\n    }\n\n    dispatchEvent(event) {\n\n        if (this._listeners === undefined) return;\n\n        var listeners = this._listeners;\n        var listenerArray = listeners[event.type];\n\n        if (listenerArray !== undefined) {\n\n            event.target = this;\n\n            var array = listenerArray.slice(0);\n\n            for (var i = 0, l = array.length; i < l; i++) {\n\n                array[i].call(this, event);\n\n            }\n\n        }\n\n    }\n}\n","/*\n * Created by 还有醋v on 2020/9/9.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nexport class SystemEvent {\n    constructor() {\n    }\n}\n","/*\n * Created by 还有醋v on 2020/9/9.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { v2, Vector2 } from \"../math/Vector2\";\n\nexport enum TouchEvent {\n    CLICK = 'click',\n    TouchDown = 'mousedown',\n    TouchMove = 'mousemove',\n    TouchOver = 'mouseover',\n    TouchOut = 'mouseout',\n    TouchUp = 'mouseup',\n}\n\nexport class Touch {\n\n    private _id;\n    private startPoint: Vector2;\n    private point: Vector2;\n    private prevPoint: Vector2;\n\n    public _type: TouchEvent;\n\n    constructor(x: number, y: number, id, type: TouchEvent) {\n        this._id = id;\n        this.startPoint = v2(x, y);\n        this.point = v2(x, y);\n        this.prevPoint = v2(x, y);\n        this._type = type;\n    }\n\n    public setTouchInfo(x, y, id) {\n        this._id = id;\n        this.prevPoint.copy(this.point);\n        this.point.set(x, y);\n    }\n\n    public get type(): TouchEvent {\n        return this._type;\n    }\n\n    public get location(): Vector2 {\n        return this.point.clone();\n    }\n\n    public get locationX(): number {\n        return this.point.x;\n    }\n\n    public get locationY(): number {\n        return this.point.y;\n    }\n\n    public getLocation(): Vector2 {\n        return this.point.clone();\n    }\n\n    public getLocationX(): number {\n        return this.point.x;\n    }\n\n    public getLocationY(): number {\n        return this.point.y;\n    }\n\n    public get prevLocation(): Vector2 {\n        return this.prevPoint.clone();\n    }\n\n    public get prevLocationX(): number {\n        return this.prevPoint.x;\n    }\n\n    public get prevLocationY(): number {\n        return this.prevPoint.y;\n    }\n\n    public getPrevLocation(): Vector2 {\n        return this.prevPoint.clone();\n    }\n\n    public getPrevLocationX(): number {\n        return this.prevPoint.x;\n    }\n\n    public getPrevLocationY(): number {\n        return this.prevPoint.y;\n    }\n\n    private get id() {\n        return this._id;\n    }\n\n    public getID() {\n        return this._id;\n    }\n\n    public get delta(): Vector2 {\n        return this.point.sub(this.prevPoint);\n    }\n\n    public getDelta() {\n        return this.point.sub(this.prevPoint);\n    }\n\n}\n\n\nexport function touch(x: number, y: number, id, type: TouchEvent) {\n    return new Touch(x, y, id, type);\n}\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nexport let dpi = window.devicePixelRatio;\n// export let dpi = 1;\n\nexport const winSize = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n","/*\n * Created by 还有醋v on 2020/9/6.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { Scene } from \"../scene/Scene\";\nimport { winSize } from \"../app/const\";\n\nexport class WebGLRenderer {\n\n    public _canvas: HTMLCanvasElement;\n    public get canvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    public set canvas(canvas: HTMLCanvasElement) {\n        this._canvas = canvas;\n    }\n\n    public _gl: WebGLRenderingContext;\n    public get gl(): WebGLRenderingContext {\n        return this._gl;\n    }\n\n    public set gl(gl: WebGLRenderingContext) {\n        this._gl = gl;\n    }\n\n    private constructor() {\n\n    }\n\n    public init() {\n        const gl = this.gl;\n        gl.clearColor(0.2, 0.2, 0.2, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        // 设置一些参数\n        gl.enable(gl.BLEND);\n        gl.enable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    }\n\n    public onResize() {\n        const canvas = this.canvas;\n        const dpi = window.devicePixelRatio;\n        console.log('dpi', dpi);\n        const w = winSize.width;\n        const h = winSize.height;\n        canvas.width = w * dpi;\n        canvas.height = h * dpi;\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        this.gl.viewport(0, 0, canvas.width, canvas.height);\n    }\n\n\n    public static create(canvas?: HTMLCanvasElement | string) {\n        const renderer = new WebGLRenderer();\n        if (!canvas) {\n            renderer.canvas = document.createElement('canvas') as HTMLCanvasElement;\n        } else if (typeof canvas == \"string\") {\n            renderer.canvas = document.getElementById(canvas) as HTMLCanvasElement;\n        } else {\n            renderer.canvas = canvas;\n        }\n\n        const names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n        for (let v of names) {\n            try {\n                // {\n                //     antialias: true,\n                //     antialiasSamples: 8,\n                //     preserveDrawingBuffer: false\n                // }\n                renderer.gl = renderer.canvas.getContext(v,) as WebGLRenderingContext;\n                break;\n            } catch (e) {\n            }\n        }\n        if (!renderer.gl) {\n            throw 'WebGL not supported.';\n        }\n\n        renderer.init();\n\n        return renderer;\n    }\n\n\n    public render(scene: Scene) {\n\n    }\n}\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { WebGLRenderer } from \"../core/WebGLRenderer\";\nimport { Scene } from \"../scene/Scene\";\nimport { dpi, winSize } from \"./const\";\nimport { touch, TouchEvent } from \"../event/TouchEvent\";\n\nclass App {\n\n    private renderer: WebGLRenderer;\n\n    private _currentScene: Scene;\n    public set currentScene(scene: Scene) {\n        this._currentScene = scene;\n    }\n\n    public get currentScene(): Scene {\n        return this._currentScene;\n    }\n\n    private constructor() {\n\n        this.renderer = WebGLRenderer.create(\n            // document.getElementById('canvas') as HTMLCanvasElement\n        );\n\n        document.body.appendChild(this.renderer.canvas);\n        // this.renderer.canvas.addEventListener('onMouse')\n\n        this.onResize();\n        this.initEvent();\n\n        this.mainLoop();\n    }\n\n    public static create() {\n        return new App();\n    }\n\n    private _lt = Date.now();\n\n    private mainLoop = () => {\n        const now = Date.now();\n        const dt = (now - this._lt) / 1000;\n        this._lt = now;\n\n        if (this.currentScene) {\n            this.currentScene.update(dt);\n            this.renderer.render(this.currentScene);\n        }\n\n        requestAnimationFrame(this.mainLoop);\n    }\n\n    private onClick = (e: MouseEvent) => {\n        // touch(e.clientX, e.clientY)\n        console.log('onClick', e);\n    }\n\n    private onMouseDown = (e: MouseEvent) => {\n        console.log('onMouseDown', e);\n\n    }\n\n    private onMouseMove = (e: MouseEvent) => {\n        console.log('onMouseMove', e);\n\n    }\n\n    private onMouesOver = (e: MouseEvent) => {\n        console.log('onMouesOver', e);\n\n    }\n\n    private onMouseOut = (e: MouseEvent) => {\n        console.log('onMouseOut', e);\n\n    }\n\n    private onMouseUp = (e: MouseEvent) => {\n        console.log('onMouseUp', e);\n\n    }\n\n    private onResize = () => {\n        winSize.width = window.innerWidth;\n        winSize.height = window.innerHeight;\n        // @ts-ignore\n        // hycv.dpi = window.devicePixelRatio;\n\n        this.renderer.onResize();\n        this.currentScene && this.currentScene.onResize();\n    }\n\n    private initEvent() {\n        // window.onresize = this.onResize;\n        window.addEventListener('resize', this.onResize);\n\n        const canvas = this.renderer.canvas;\n\n        canvas.addEventListener(TouchEvent.CLICK, this.onClick);\n        canvas.addEventListener(TouchEvent.TouchDown, this.onMouseDown);\n        canvas.addEventListener(TouchEvent.TouchMove, this.onMouseMove);\n        canvas.addEventListener(TouchEvent.TouchOver, this.onMouesOver);\n        canvas.addEventListener(TouchEvent.TouchOut, this.onMouseOut);\n        canvas.addEventListener(TouchEvent.TouchUp, this.onMouseUp);\n    }\n}\n\nexport const app = App.create();\n\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { app } from \"./App\";\nimport { Scene } from \"../scene/Scene\";\n\nclass Director {\n\n    private constructor() {\n\n    }\n\n    public static create() {\n        return new Director();\n    }\n\n    public get currentScene(): Scene {\n        return app.currentScene;\n    }\n\n    public changeScene(scene) {\n        const oldScene = this.currentScene;\n        app.currentScene = scene;\n        app.currentScene.init();\n        oldScene && oldScene.destroy();\n    }\n\n\n}\n\nexport const director = Director.create();\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\n/**\n * 加载shader\n * @param gl\n * @param type\n * @param source\n * @returns {WebGLShader|null}\n */\nfunction loadShader(gl: WebGLRenderingContext, type: GLenum, source: string) {\n    // 创建一个shader\n    const shader = gl.createShader(type);\n    if (shader == null) {\n        throw '无法创建shader';\n    }\n\n    gl.shaderSource(shader, source);    // 添加指定shader的代码\n    gl.compileShader(shader);    // 编译shader\n\n    // 获取编译状态\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.error(gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n        return null;\n    }\n\n    return shader;\n\n}\n\n/**\n * 创建一个gl程序\n * @param gl\n * @param vertexSrc\n * @param fragmentSrc\n * @returns {null|WebGLProgram}\n */\nexport function compileProgram(gl: WebGLRenderingContext, vertexSrc: string, fragmentSrc: string, attributeLocations?) {\n    // 初始化shader\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSrc);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n\n    if (!vertexShader || !fragmentShader) return;\n\n    // 创建一个gl程序\n    const program = gl.createProgram();\n\n    // 附加shader\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    // optionally, set the attributes manually for the program rather than letting WebGL decide..\n    // （可选）手动为程序设置属性，而不是让WebGL决定。\n    if (attributeLocations) {\n        for (let i in attributeLocations) {\n            gl.bindAttribLocation(program, attributeLocations[i], i);\n        }\n    }\n\n    // link gl程序\n    gl.linkProgram(program);\n\n    gl.deleteShader(vertexShader);\n    gl.deleteShader(fragmentShader);\n\n    // 检查link状态\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        gl.deleteProgram(program);\n        console.error('gl.getError()', gl.getError());\n        throw gl.getProgramInfoLog(program);\n    }\n\n    return program;\n}\n\n\n/**\n * 给shader source设置precision\n * Sets the float precision on the shader. If the precision is already present this function will do nothing\n * @param {string} src       the shader source\n * @param {string} precision The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n *\n * @return {string} modified shader source\n */\nexport function setPrecision(src: string, precision: string): string {\n    return (src.substring(0, 9) !== 'precision')\n        ? 'precision ' + precision + ' float;\\n' + src\n        : src;\n}\n\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { EventDispatcher } from \"../event/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\n\nexport class Object3D extends EventDispatcher {\n\n    /**\n     * 世界矩阵\n     */\n    _worldMatrix: Matrix4 = new Matrix4();\n    /**\n     * 本地矩阵\n     */\n    _localMatrix: Matrix4 = new Matrix4();\n\n    parent: Object3D;\n\n    // updateWorldMatrix(updateParents, updateChildren) {\n    //\n    //     var parent = this.parent;\n    //\n    //     if (updateParents === true && parent !== null) {\n    //\n    //         parent.updateWorldMatrix(true, false);\n    //\n    //     }\n    //\n    //     if (this.matrixAutoUpdate) this.updateMatrix();\n    //\n    //     if (this.parent === null) {\n    //\n    //         this.matrixWorld.copy(this.matrix);\n    //\n    //     } else {\n    //\n    //         this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n    //\n    //     }\n    //\n    //     // update children\n    //\n    //     if (updateChildren === true) {\n    //\n    //         var children = this.children;\n    //\n    //         for (var i = 0, l = children.length; i < l; i++) {\n    //\n    //             children[i].updateWorldMatrix(false, true);\n    //\n    //         }\n    //\n    //     }\n    //\n    // }\n\n    constructor() {\n        super();\n    }\n\n    public init() {\n\n    }\n\n    public update(dt) {\n\n    }\n\n    public render() {\n        this._render();\n\n\n    }\n\n    protected _render() {\n\n    }\n\n    public destroy() {\n\n    }\n\n    public onResize() {\n\n    }\n}\n\n","/**\n * 使uniform能通过赋值直接和着色器程序通信\n * @class\n * @memberof glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param uniformData\n * @return attributes {Object}\n */\nexport function generateUniformAccessObject(gl:WebGLRenderingContext, uniformData) {\n    // this is the object we will be sending back.\n    // an object hierachy will be created for structs\n    const uniforms = { data: {} };\n\n    uniforms[\"gl\"] = gl;\n\n    const uniformKeys = Object.keys(uniformData);\n\n    for (let i = 0; i < uniformKeys.length; i++) {\n        const fullName = uniformKeys[i];\n\n        const nameTokens = fullName.split('.');\n        const name = nameTokens[nameTokens.length - 1];\n\n\n        const uniformGroup = getUniformGroup(nameTokens, uniforms);\n\n        const uniform = uniformData[fullName];\n        uniformGroup.data[name] = uniform;\n\n        uniformGroup.gl = gl;\n\n        Object.defineProperty(uniformGroup, name, {\n            get: generateGetter(name),\n            set: generateSetter(name, uniform)\n        });\n    }\n\n    return uniforms;\n}\n\nconst generateGetter = function (name) {\n    return function () {\n        return this.data[name].value;\n    };\n};\n\nconst GLSL_SINGLE_SETTERS = {\n    float: function setSingleFloat(gl, location, value) { gl.uniform1f(location, value); },\n    vec2: function setSingleVec2(gl, location, value) { gl.uniform2f(location, value[0], value[1]); },\n    vec3: function setSingleVec3(gl, location, value) { gl.uniform3f(location, value[0], value[1], value[2]); },\n    vec4: function setSingleVec4(gl, location, value) { gl.uniform4f(location, value[0], value[1], value[2], value[3]); },\n\n    int: function setSingleInt(gl, location, value) { gl.uniform1i(location, value); },\n    ivec2: function setSingleIvec2(gl, location, value) { gl.uniform2i(location, value[0], value[1]); },\n    ivec3: function setSingleIvec3(gl, location, value) { gl.uniform3i(location, value[0], value[1], value[2]); },\n    ivec4: function setSingleIvec4(gl, location, value) { gl.uniform4i(location, value[0], value[1], value[2], value[3]); },\n\n    bool: function setSingleBool(gl, location, value) { gl.uniform1i(location, value); },\n    bvec2: function setSingleBvec2(gl, location, value) { gl.uniform2i(location, value[0], value[1]); },\n    bvec3: function setSingleBvec3(gl, location, value) { gl.uniform3i(location, value[0], value[1], value[2]); },\n    bvec4: function setSingleBvec4(gl, location, value) { gl.uniform4i(location, value[0], value[1], value[2], value[3]); },\n\n    mat2: function setSingleMat2(gl, location, value) { gl.uniformMatrix2fv(location, false, value); },\n    mat3: function setSingleMat3(gl, location, value) { gl.uniformMatrix3fv(location, false, value); },\n    mat4: function setSingleMat4(gl, location, value) { gl.uniformMatrix4fv(location, false, value); },\n\n    sampler2D: function setSingleSampler2D(gl, location, value) { gl.uniform1i(location, value); },\n};\n\nconst GLSL_ARRAY_SETTERS = {\n    float: function setFloatArray(gl, location, value) { gl.uniform1fv(location, value); },\n    vec2: function setVec2Array(gl, location, value) { gl.uniform2fv(location, value); },\n    vec3: function setVec3Array(gl, location, value) { gl.uniform3fv(location, value); },\n    vec4: function setVec4Array(gl, location, value) { gl.uniform4fv(location, value); },\n    int: function setIntArray(gl, location, value) { gl.uniform1iv(location, value); },\n    ivec2: function setIvec2Array(gl, location, value) { gl.uniform2iv(location, value); },\n    ivec3: function setIvec3Array(gl, location, value) { gl.uniform3iv(location, value); },\n    ivec4: function setIvec4Array(gl, location, value) { gl.uniform4iv(location, value); },\n    bool: function setBoolArray(gl, location, value) { gl.uniform1iv(location, value); },\n    bvec2: function setBvec2Array(gl, location, value) { gl.uniform2iv(location, value); },\n    bvec3: function setBvec3Array(gl, location, value) { gl.uniform3iv(location, value); },\n    bvec4: function setBvec4Array(gl, location, value) { gl.uniform4iv(location, value); },\n    sampler2D: function setSampler2DArray(gl, location, value) { gl.uniform1iv(location, value); },\n};\n\nfunction generateSetter(name, uniform) {\n    return function (value) {\n        this.data[name].value = value;\n        var location = this.data[name].location;\n        if (uniform.size === 1) {\n            GLSL_SINGLE_SETTERS[uniform.type](this.gl, location, value);\n        }\n        else {\n            // glslSetArray(gl, location, type, value) {\n            GLSL_ARRAY_SETTERS[uniform.type](this.gl, location, value);\n        }\n    };\n}\n\nfunction getUniformGroup(nameTokens, uniform) {\n    let cur = uniform;\n\n    for (let i = 0; i < nameTokens.length - 1; i++) {\n        const o = cur[nameTokens[i]] || { data: {} };\n        cur[nameTokens[i]] = o;\n        cur = o;\n    }\n\n    return cur;\n}\n\n\n\n","\nexport function mapType(gl, type) {\n    if (!GL_TABLE) {\n        const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for (let i = 0; i < typeNames.length; ++i) {\n            const tn = typeNames[i];\n            GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n    return GL_TABLE[type];\n}\n\nlet GL_TABLE = null;\n\nconst GL_TO_GLSL_TYPES = {\n    'FLOAT': 'float',\n    'FLOAT_VEC2': 'vec2',\n    'FLOAT_VEC3': 'vec3',\n    'FLOAT_VEC4': 'vec4',\n\n    'INT': 'int',\n    'INT_VEC2': 'ivec2',\n    'INT_VEC3': 'ivec3',\n    'INT_VEC4': 'ivec4',\n\n    'BOOL': 'bool',\n    'BOOL_VEC2': 'bvec2',\n    'BOOL_VEC3': 'bvec3',\n    'BOOL_VEC4': 'bvec4',\n\n    'FLOAT_MAT2': 'mat2',\n    'FLOAT_MAT3': 'mat3',\n    'FLOAT_MAT4': 'mat4',\n\n    'SAMPLER_2D': 'sampler2D'\n};\n\n","/**\n * @class\n * @memberof glCore.shader\n * @param type {String}\n * @return {Number}\n */\nexport function mapSize(type: string): number {\n    return GLSL_TO_SIZE[type];\n}\n\n\nlet GLSL_TO_SIZE = {\n    'float': 1,\n    'vec2': 2,\n    'vec3': 3,\n    'vec4': 4,\n\n    'int': 1,\n    'ivec2': 2,\n    'ivec3': 3,\n    'ivec4': 4,\n\n    'bool': 1,\n    'bvec2': 2,\n    'bvec3': 3,\n    'bvec4': 4,\n\n    'mat2': 4,\n    'mat3': 9,\n    'mat4': 16,\n\n    'sampler2D': 1\n};\n","/*\n * Created by 还有醋v on 2020/9/8.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { mapType } from \"./mapType\";\nimport { mapSize } from \"./mapSize\";\n\nexport class Attribute {\n\n    public name: string;\n    public size: number;\n    public type: string;\n\n    public location: GLint;\n\n    public buffer: WebGLBuffer;\n    private _bufferData = null;\n\n    public set bufferData(bufferData) {\n        this._bufferData = bufferData;\n    }\n\n    public get bufferData() {\n        return this._bufferData;\n    }\n\n    private constructor(\n        public gl: WebGLRenderingContext,\n        public program: WebGLProgram,\n        attribData: WebGLActiveInfo,\n    ) {\n        this.name = attribData.name;\n        this.type = mapType(gl, attribData.type);\n        this.size = mapSize(this.type);\n    }\n\n    public static create(\n        gl: WebGLRenderingContext,\n        program: WebGLProgram,\n        attribData: WebGLActiveInfo\n    ) {\n        return new Attribute(gl, program, attribData).init();\n    }\n\n    public init() {\n        const gl = this.gl;\n        this.buffer = gl.createBuffer();\n        this.location = gl.getAttribLocation(this.program, this.name);\n        this.enable();\n        return this;\n    }\n\n    public enable() {\n        this.gl.enableVertexAttribArray(this.location);\n    }\n\n    public disable() {\n        this.gl.disableVertexAttribArray(this.location);\n    }\n\n    public bind(bufferData) {\n        bufferData && (this._bufferData = bufferData);\n        const gl = this.gl;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this._bufferData, gl.STATIC_DRAW);\n    }\n\n    public pointer(type = this.gl.FLOAT, normalized = false, stride = 0, start = 0) {\n        this.gl.vertexAttribPointer(this.location, this.size, type, normalized, stride, start);\n    }\n\n}\n","\n/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { Attribute } from \"./Attribute\";\n\n/**\n * Extracts the attributes获取attributes属性\n * @class\n * @memberof glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nexport function extractAttributes(gl: WebGLRenderingContext, program: WebGLProgram) {\n    const attributes = {};\n\n    //所有激活的ATTRIBUTES\n    const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < totalAttributes; i++) {\n        const attribData = gl.getActiveAttrib(program, i);\n        const newAttribute = Attribute.create(gl, program, attribData);\n        newAttribute.init();\n        // console.log(attribData);\n        // console.log(newAttribute);\n        attributes[attribData.name] = newAttribute\n    }\n\n    return attributes;\n}\n","/**\n * @class\n * @memberof glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n */\nexport function defaultValue(type:string, size:number) {\n    switch (type) {\n        case 'float':\n            return 0;\n\n        case 'vec2':\n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':\n            return new Float32Array(4 * size);\n\n        case 'int':\n        case 'sampler2D':\n            return 0;\n\n        case 'ivec2':\n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4':\n            return new Int32Array(4 * size);\n\n        case 'bool':\n            return false;\n\n        case 'bvec2':\n\n            return booleanArray(2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n}\n\nconst booleanArray = function (size) {\n    const array = new Array(size);\n\n    for (let i = 0; i < array.length; i++) {\n        array[i] = false;\n    }\n\n    return array;\n};\n\n\n","import { mapType } from './mapType';\nimport { defaultValue } from './defaultValue';\n\n/**\n * Extracts the uniforms 获取uniforms属性\n * @class\n * @memberof glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the uniforms from\n * @return uniforms {Object} ，所有uniform的集合\n * 每个uniform的格式\n * {\n *  type: uniform的类型，'float','vec2'等等\n *\tsize: uniformData.size,决定uniform赋值用什么方法\n *\tlocation: WebGLUniformLocation,uniform变量的存储地址\n *\tvalue: 默认值\n * }\n */\nexport function extractUniforms(gl: WebGLRenderingContext, program: WebGLProgram) {\n    const uniforms = {};\n\n    const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (let i = 0; i < totalUniforms; i++) {\n        const uniformData: WebGLActiveInfo = gl.getActiveUniform(program, i);\n        const name = uniformData.name.replace(/\\[.*?\\]/, \"\");\n        const type = mapType(gl, uniformData.type);\n\n        uniforms[name] = {\n            type: type,\n            size: uniformData.size,\n            location: gl.getUniformLocation(program, name),\n            value: defaultValue(type, uniformData.size)\n        };\n    }\n\n    return uniforms;\n}\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { compileProgram, setPrecision } from \"./ShaderTools\";\nimport { generateUniformAccessObject } from \"./generateUniformAccessObject\";\nimport { extractAttributes } from \"./extractAttributes\";\nimport { extractUniforms } from \"./extractUniforms\";\n\nexport class Shader {\n\n    private program: WebGLProgram;\n\n    /**\n     *  The attributes of the shader as an object containing the following properties\n     * {\n     * \ttype,\n     * \tsize,\n     * \tlocation,\n     * \tpointer\n     * }\n     * @member {Object}\n     */\n    attributes: any;\n\n    uniformData: any;\n    /**\n     * The uniforms of the shader as an object containing the following properties\n     * {\n     * \tgl,\n     * \tdata\n     * }\n     * @member {Object}\n     */\n    uniforms: any;\n\n    constructor(\n        private gl: WebGLRenderingContext,\n        vertexSrc: string,\n        fragmentSrc: string,\n        precision?: string,\n        attributeLocations?\n    ) {\n\n        if (precision) {\n            setPrecision(vertexSrc, precision);\n            setPrecision(fragmentSrc, precision);\n        }\n\n        this.program = compileProgram(gl, vertexSrc, fragmentSrc);\n\n        this.attributes = extractAttributes(gl, this.program);\n\n        this.uniformData = extractUniforms(gl, this.program);\n\n        this.uniforms = generateUniformAccessObject(gl, this.uniformData);\n    }\n\n    public use() {\n        this.gl.useProgram(this.program);\n        return this;\n    }\n\n    public destroy() {\n\n        this.attributes = null;\n        this.uniformData = null;\n        this.uniforms = null;\n\n        this.gl.deleteProgram(this.program);\n    }\n\n}\n","/*\n * Created by 还有醋v on 2020/9/7.\n * Copyright © 2020 haiyoucuv. All rights reserved.\n */\n\nimport { Object3D } from \"../core/Object3D\";\nimport { Touch } from \"../event/TouchEvent\";\n\nexport class Scene extends Object3D {\n    constructor() {\n        super();\n    }\n\n    public update(dt) {\n\n    }\n\n    protected _render() {\n\n    }\n\n    public onClick(t: Touch) {\n        console.log(t);\n    }\n\n    public onMouseDown(t: Touch) {\n\n    }\n\n    public onMouseMove(t: Touch) {\n\n    }\n\n    public onMouesOver(t: Touch) {\n\n    }\n\n    public onMouseOut(t: Touch) {\n\n    }\n\n    public onMouseUp(t: Touch) {\n\n    }\n}\n\n\n"],"names":["RotationOrders","TouchEvent","__extends"],"mappings":"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,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAE3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAE3D,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAEvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAEvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACvD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAEvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;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AC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEtE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,GAAG,KAAK,CAAC;gBAAE,OAAO,IAAI,CAAC;YAG3B,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YACd,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;gBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YAG7C,OAAO,IAAI,CAAC;SACf;QAMD,wBAAM,GAAN;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAClC;QAYD,0BAAQ,GAAR,UAAS,IAAY,EAAE,KAAa,EAAE,MAAc,EAAE,GAAW,EAAE,IAAY,EAAE,GAAW;YACxF,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAElB,IAAI,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAAE;gBAClD,MAAM,cAAc,CAAC;aACxB;YAED,EAAE,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YACxB,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC;YACxB,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;YAEtB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAElB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAET,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAET,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAChB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEV,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;YAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEV,OAAO,IAAI,CAAC;SACf;QAYD,uBAAK,GAAL,UAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACrC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SACnF;QAYD,4BAAU,GAAV,UAAW,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC1C,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAElB,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,IAAI,KAAK,GAAG,EAAE;gBAClD,MAAM,cAAc,CAAC;aACxB;YACD,IAAI,IAAI,IAAI,CAAC,EAAE;gBACX,MAAM,WAAW,CAAC;aACrB;YACD,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,MAAM,UAAU,CAAC;aACpB;YAED,EAAE,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YACxB,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC;YACxB,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;YAEtB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAElB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAET,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAET,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,IAAI,EAAE,CAAC;YAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC3B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAEX,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;YAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEV,OAAO,IAAI,CAAC;SACf;QAYD,yBAAO,GAAP,UAAQ,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACvC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SACrF;QAUD,gCAAc,GAAd,UAAe,IAAY,EAAE,MAAc,EAAE,IAAY,EAAE,GAAW;YAClE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAEjB,IAAI,IAAI,KAAK,GAAG,IAAI,MAAM,KAAK,CAAC,EAAE;gBAC9B,MAAM,cAAc,CAAC;aACxB;YACD,IAAI,IAAI,IAAI,CAAC,EAAE;gBACX,MAAM,WAAW,CAAC;aACrB;YACD,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,MAAM,UAAU,CAAC;aACpB;YAED,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;YAChC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,EAAE;gBACT,MAAM,cAAc,CAAC;aACxB;YAED,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;YACtB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAExB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAElB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC;YACnf;QAED,iCAAe,GAAf,UAAgB,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG;YAM/C,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,IAAM,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YACpC,IAAM,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC;YACpC,IAAM,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG,IAAI,CAAC,CAAC;YAC1C,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,KAAK,GAAG,GAAG,MAAM,CAAC,CAAC;YAC1C,IAAM,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;YACvC,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;YACzf;QAUD,6BAAW,GAAX,UAAY,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG;YAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SAC7E;QASD,0BAAQ,GAAR,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC;YACZ,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxf;QASD,uBAAK,GAAL,UAAM,CAAC,EAAE,CAAC,EAAE,CAAC;YACT,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACX,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACX,OAAO,IAAI,CAAC;SACf;QAED,mCAAiB,GAAjB;YACI,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;SAC5D;QASD,8BAAY,GAAZ,UAAa,CAAC,EAAE,CAAC,EAAE,CAAC;YAChB,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxf;QASD,2BAAS,GAAT,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;YACb,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACzC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QAWD,2BAAS,GAAT,UAAU,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAEnD,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,GAAG,CAAC;YAC9B,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAElB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAE/B,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,CAAC,GAAG,CAAC,CAAC,CAAC;iBACV;gBACD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAEtC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,CAAC,GAAG,CAAC,CAAC,CAAC;iBACV;gBACD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAEtC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,CAAC,GAAG,CAAC,CAAC,CAAC;iBACV;gBACD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM;gBAEH,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvC,IAAI,GAAG,KAAK,CAAC,EAAE;oBACX,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;oBACf,CAAC,IAAI,IAAI,CAAC;oBACV,CAAC,IAAI,IAAI,CAAC;oBACV,CAAC,IAAI,IAAI,CAAC;iBACb;gBACD,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACX,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACX,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACX,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACX,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACX,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACX,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBAEX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAET,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAET,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBAEV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACb;YAED,OAAO,IAAI,CAAC;SACf;QAWD,wBAAM,GAAN,UAAO,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/D;QASD,2BAAS,GAAT,UAAU,GAAY,EAAE,MAAe,EAAE,EAAW;YAChD,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAEpD,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACtB,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACtB,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAGtB,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YACjD,EAAE,IAAI,GAAG,CAAC;YACV,EAAE,IAAI,GAAG,CAAC;YACV,EAAE,IAAI,GAAG,CAAC;YAGV,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YAG3B,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YACjD,EAAE,IAAI,GAAG,CAAC;YACV,EAAE,IAAI,GAAG,CAAC;YACV,EAAE,IAAI,GAAG,CAAC;YAGV,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACvB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACvB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAGvB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAET,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAET,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;YACZ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAGV,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACjD;QAcD,wBAAM,GAAN,UAAO,GAAY,EAAE,MAAe,EAAE,EAAW;YAC7C,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;YACxB,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;YACxB,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;YACxB,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAEpB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACX;YACD,CAAC,CAAC,SAAS,EAAE,CAAC;YACd,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAEpB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;oBACtB,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;iBACjB;qBAAM;oBACH,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;iBACjB;gBACD,CAAC,CAAC,SAAS,EAAE,CAAC;gBACd,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aACzB;YACD,CAAC,CAAC,SAAS,EAAE,CAAC;YACd,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,OAAO,IAAI,CAAC;SACf;QAQD,4BAAU,GAAV,UAAW,KAAK,EAAE,KAAK;YACnB,IAAM,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;YAC1B,IAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;YAEvB,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAElG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAE5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAE5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAE7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAElC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;QAeD,yCAAuB,GAAvB,UAAwB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;YACvF,IAAM,CAAC,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;YAC3D,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;SAClF;QAED,4CAA0B,GAA1B,UAA2B,CAAC;YACxB,IAAM,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,IAAM,GAAG,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;SACrC;QAED,yBAAO,GAAP,UAAQ,QAAiB,EAAE,UAAsB,EAAE,KAAc;YAE7D,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEzB,IAAM,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAC7E,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACzC,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAC5C,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAC5C,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAE5C,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YAE/C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;YAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEV,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;YAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEV,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YACvB,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;YAC9B,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEX,EAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEX,OAAO,IAAI,CAAC;SAEf;QAED,2BAAS,GAAT,UAAU,QAAQ,EAAE,UAAU,EAAE,KAAK;YACjC,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;YAC7B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;YAC7B,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YAClD,IAAM,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACpD,IAAM,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YAGrD,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,GAAG,GAAG,CAAC;gBAAE,EAAE,GAAG,CAAC,EAAE,CAAC;YAEtB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACpB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACpB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAGpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAElB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;YACrB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;YACrB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;YAErB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAE5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAE5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC;YAE7B,UAAU,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;YAEzC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;YACb,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;YACb,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;YAEb,OAAO,IAAI,CAAC;SACf;QAED,6BAAW,GAAX;YAEI,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEzB,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAK3D,QACI,GAAG,IACC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;kBACd,GAAG,GAAG,GAAG,GAAG,GAAG;kBACf,GAAG,GAAG,GAAG,GAAG,GAAG;kBACf,GAAG,GAAG,GAAG,GAAG,GAAG;kBACf,GAAG,GAAG,GAAG,GAAG,GAAG;kBACf,GAAG,GAAG,GAAG,GAAG,GAAG,CACpB;gBACD,GAAG,IACC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;sBACd,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG,CACpB;gBACD,GAAG,IACC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;sBACd,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG,CACpB;gBACD,GAAG,IACC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;sBACd,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG;sBACf,GAAG,GAAG,GAAG,GAAG,GAAG,CACpB,EAEH;SAEL;QAED,iCAAe,GAAf,UAAgB,CAAC;YACb,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;YACzB,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,IAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;YAEtB,IAAM,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACzD,IAAM,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACzD,IAAM,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YAEzD,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEV,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEV,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;YACzB,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEX,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACX,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACX,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACX,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEX,OAAO,IAAI,CAAC;SAEf;QACL,cAAC;IAAD,CAAC,IAAA;aAMe,IAAI,CAChB,GAAyC,EAAE,GAAe,EAAE,GAAe,EAAE,GAAe,EAC5F,GAAe,EAAE,GAAe,EAAE,GAAe,EAAE,GAAe,EAClE,GAAe,EAAE,GAAe,EAAE,GAAe,EAAE,GAAe,EAClE,GAAe,EAAE,GAAe,EAAE,GAAe,EAAE,GAAe;QAHlE,oBAAA,EAAA,OAAyC;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAC5F,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAClE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAClE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAAE,oBAAA,EAAA,OAAe;QAElE,OAAO,IAAI,OAAO,CACd,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CACrB,CAAC;IACN;;;QCloCI,iBACW,CAAa,EACb,CAAa,EACb,CAAa;YAFb,kBAAA,EAAA,KAAa;YACb,kBAAA,EAAA,KAAa;YACb,kBAAA,EAAA,KAAa;YAFb,MAAC,GAAD,CAAC,CAAY;YACb,MAAC,GAAD,CAAC,CAAY;YACb,MAAC,GAAD,CAAC,CAAY;SAEvB;QAED,qBAAG,GAAH,UAAI,CAAS,EAAE,CAAS,EAAE,CAAS;YAC/B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,IAAI,CAAA;SACd;QAED,sBAAI,GAAJ,UAAK,CAAU;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,OAAO,IAAI,CAAA;SACd;QAED,uBAAK,GAAL;YACI,OAAO,IAAI,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,qBAAG,GAAH,UAAI,CAAU;YACV,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QAED,2BAAS,GAAT,UAAU,CAAS;YAEf,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YAEZ,OAAO,IAAI,CAAC;SAEf;QAED,4BAAU,GAAV,UAAW,CAAU,EAAE,CAAU;YAC7B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QAED,iCAAe,GAAf,UAAgB,CAAU,EAAE,CAAS;YACjC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;SACf;QAED,qBAAG,GAAH,UAAI,CAAU;YACV,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,OAAO,IAAI,CAAC;SAEf;QAED,2BAAS,GAAT,UAAU,CAAC;YACP,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,OAAO,IAAI,CAAC;SACf;QAED,4BAAU,GAAV,UAAW,CAAU,EAAE,CAAU;YAC7B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QAED,gCAAc,GAAd,UAAe,MAAc;YAEzB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;YACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;YACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;YAEjB,OAAO,IAAI,CAAC;SAEf;QAED,iCAAe,GAAf,UAAgB,CAAU,EAAE,CAAU;YAClC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QAED,wBAAM,GAAN,UAAO,CAAU;YACb,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QAED,8BAAY,GAAZ,UAAa,MAAc;YACvB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;SAC1C;QAED,uBAAK,GAAL,UAAM,CAAU;YACZ,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACrC;QAED,8BAAY,GAAZ,UAAa,CAAU,EAAE,CAAU;YAC/B,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAEnC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,qBAAG,GAAH,UAAI,CAAU;YACV,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACrD;QAKD,wBAAM,GAAN;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACzE;QAED,0BAAQ,GAAR;YACI,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SAC9D;QAKD,2BAAS,GAAT;YACI,IAAM,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;YACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;YACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;YACjB,OAAO,IAAI,CAAC;SACf;QAED,4BAAU,GAAV,UAAW,CAAU;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;QAED,mCAAiB,GAAjB,UAAkB,CAAU;YACxB,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9D,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;SACtC;QAED,qBAAG,GAAH,UAAI,CAAU;YACV,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,qBAAG,GAAH,UAAI,CAAU;YACV,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,uBAAK,GAAL,UAAM,GAAY,EAAE,GAAY;YAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC;SACf;QAED,6BAAW,GAAX,UAAY,MAAc,EAAE,MAAc;YACtC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;SAC/F;QAED,6BAAW,GAAX,UAAY,GAAW,EAAE,GAAW;YAChC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SACrG;QAMD,8BAAY,GAAZ,UAAa,CAAU;YACnB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACzC,IAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;YACrB,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACvD,OAAO,IAAI,CAAC;SACf;QAMD,8BAAY,GAAZ,UAAa,CAAU;YACnB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACzC,IAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;YACrB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACf;QAMD,uCAAqB,GAArB,UAAsB,CAAU;YAC5B,IAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;YACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,OAAO,IAAI,CAAC;SACf;QAMD,oCAAkB,GAAlB,UAAmB,CAAU;YACzB,IAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACnD,IAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACnD,IAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACnD,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;SACf;QAED,qCAAmB,GAAnB,UAAoB,CAAU,EAAE,KAAa;YACzC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;SAChD;QAED,oCAAkB,GAAlB,UAAmB,CAAU;YACzB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACzC,IAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;YACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;QAMD,yBAAO,GAAP,UAAQ,MAAc;YAClB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;SAC7F;QAED,2BAAS,GAAT,UAAU,MAAc;YACpB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,OAAO,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACnH;QAGD,wBAAM,GAAN,UAAO,CAAU;YACb,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE;SACrE;QAED,2BAAS,GAAT,UAAU,KAA8B,EAAE,MAAkB;YAAlB,uBAAA,EAAA,UAAkB;YACxD,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,yBAAO,GAAP,UAAQ,KAAoB,EAAE,MAAkB;YAAxC,sBAAA,EAAA,UAAoB;YAAE,uBAAA,EAAA,UAAkB;YAC5C,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAC3B,OAAO,KAAK,CAAC;SAChB;QACL,cAAC;IAAD,CAAC,IAAA;aAMe,EAAE,CAAC,CAAa,EAAE,CAAa,EAAE,CAAa;QAA3C,kBAAA,EAAA,KAAa;QAAE,kBAAA,EAAA,KAAa;QAAE,kBAAA,EAAA,KAAa;QAC1D,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC;;;QChSI,gBACW,MAAsB,EACtB,MAAkB;YADlB,uBAAA,EAAA,aAAa,OAAO,EAAE;YACtB,uBAAA,EAAA,UAAkB;YADlB,WAAM,GAAN,MAAM,CAAgB;YACtB,WAAM,GAAN,MAAM,CAAY;SAE5B;QAED,oBAAG,GAAH,UAAI,MAAe,EAAE,MAAc;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;QAED,8BAAa,GAAb,UAAc,MAAiB,EAAE,cAAwB;YACrD,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,cAAc,KAAK,SAAS,EAAE;gBAC9B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC/B;iBAAM;gBACH,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC/C;YACD,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC7C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5E;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;QAED,sBAAK,GAAL;YACI,OAAO,IAAI,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;QAED,qBAAI,GAAJ,UAAK,MAAc;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QAED,sBAAK,GAAL;YACI,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;SAC7B;QAED,8BAAa,GAAb,UAAc,KAAc;YACxB,QAAQ,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;SAChF;QAED,gCAAe,GAAf,UAAgB,KAAc;YAC1B,QAAQ,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;SACxD;QAED,iCAAgB,GAAhB,UAAiB,MAAc;YAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC;SAClF;QAED,8BAAa,GAAb,UAAc,GAAW;YACrB,OAAO,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,2BAAU,GAAV,UAAW,KAAc,EAAE,MAA+B;YAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;YACtD,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,aAAa,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC7C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;gBACpC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvD;YACD,OAAO,MAAM,CAAC;SACjB;QAED,+BAAc,GAAd,UAAe,MAAyB;YAAzB,uBAAA,EAAA,aAAmB,IAAI,EAAE;YACpC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,OAAO,MAAM,CAAC;SACjB;QAED,6BAAY,GAAZ,UAAa,MAAe;YACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;YACvD,OAAO,IAAI,CAAC;SACf;QAED,0BAAS,GAAT,UAAU,MAAe;YACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAED,uBAAM,GAAN,UAAO,MAAc;YACjB,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/E;QACL,aAAC;IAAD,CAAC,IAAA;aAEe,MAAM,CAClB,MAAsB,EACtB,MAAkB;QADlB,uBAAA,EAAA,aAAa,OAAO,EAAE;QACtB,uBAAA,EAAA,UAAkB;QAElB,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACtC;;;QChGI,cACW,GAA2D,EAC3D,GAA2D;YAD3D,oBAAA,EAAA,UAAmB,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;YAC3D,oBAAA,EAAA,UAAmB,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;YAD3D,QAAG,GAAH,GAAG,CAAwD;YAC3D,QAAG,GAAH,GAAG,CAAwD;SAErE;QAED,kBAAG,GAAH,UAAI,GAAY,EAAE,GAAY;YAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,IAAI,CAAA;SACd;QAED,oBAAK,GAAL;YACI,OAAO,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;QAED,mBAAI,GAAJ,UAAK,GAAS;YACV,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QAED,wBAAS,GAAT;YACI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAED,sBAAO,GAAP;YACI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9F;QAMD,wBAAS,GAAT,UAAU,GAA4B;YAA5B,oBAAA,EAAA,UAAmB,OAAO,EAAE;YAClC,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACrG;QAMD,sBAAO,GAAP,UAAQ,GAA4B;YAA5B,oBAAA,EAAA,UAAmB,OAAO,EAAE;YAChC,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACjF;QAMD,2BAAY,GAAZ,UAAa,KAA8B;YAEvC,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;YAErB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;YAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAE7C,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEvB,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,CAAC,CAAC;gBAEvB,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,IAAI;oBAAE,IAAI,GAAG,CAAC,CAAC;aAE1B;YAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,mCAAoB,GAApB,UAAqB,MAAe,EAAE,IAAa;YAC/C,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;YACzB,IAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;SACf;QAED,4BAAa,GAAb,UAAc,MAAiB;YAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACjC;YACD,OAAO,IAAI,CAAC;SACf;QAYD,4BAAa,GAAb,UAAc,KAAc;YACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;QAMD,6BAAc,GAAd,UAAe,MAAe;YAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;QAED,6BAAc,GAAd,UAAe,MAAc;YACzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;QA8BD,4BAAa,GAAb,UAAc,KAAc;YACxB,OAAO,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACjD,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACrD;QAED,0BAAW,GAAX,UAAY,GAAS;YACjB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1D;QAED,4BAAa,GAAb,UAAc,GAAS;YACnB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAEzD;QAED,+BAAgB,GAAhB,UAAiB,MAAc;YAC3B,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;YAEnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;YAE7C,OAAO,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;SAC3F;QAED,yBAAU,GAAV,UAAW,KAAc,EAAE,GAA4B;YAA5B,oBAAA,EAAA,UAAmB,OAAO,EAAE;YACnD,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACpD;QAED,8BAAe,GAAf,UAAgB,KAAc;YAC1B,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;YACzB,IAAM,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9D,OAAO,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;SAC3C;QAED,gCAAiB,GAAjB,UAAkB,GAA0B;YAA1B,oBAAA,EAAA,UAAkB,MAAM,EAAE;YACxC,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YAC7C,OAAO,GAAG,CAAC;SACd;QAED,wBAAS,GAAT,UAAU,GAAS;YACf,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEtB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAAE,IAAI,CAAC,SAAS,EAAE,CAAC;YACrC,OAAO,IAAI,CAAC;SAEf;QAED,oBAAK,GAAL,UAAM,GAAS;YAEX,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEtB,OAAO,IAAI,CAAC;SAEf;QAED,2BAAY,GAAZ,UAAa,MAAe;YAExB,IAAM,MAAM,GAAG;gBACX,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;gBACb,IAAI,OAAO,EAAE;aAChB,CAAC;YAEF,IAAI,IAAI,CAAC,OAAO,EAAE;gBAAE,OAAO,IAAI,CAAC;YAGhC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAEvE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,wBAAS,GAAT,UAAU,MAAe;YAErB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;QAED,qBAAM,GAAN,UAAO,GAAS;YACZ,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC/D;QACL,WAAC;IAAD,CAAC;;ICpQD,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;KACpD;;QAOG;SACC;QAEa,kBAAY,GAA1B;YAIK,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC,CAAC;YAC1C,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC,CAAC;YAC1C,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC,CAAC;YAC1C,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC,CAAC;YAC1C,IAAM,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG;gBACtG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG;gBACzG,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;gBACnG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;YAG3F,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAE7B;QAEa,WAAK,GAAnB,UAAoB,KAAK,EAAE,GAAG,EAAE,GAAG;YAE/B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;SAE9C;QAKa,qBAAe,GAA7B,UAA8B,CAAC,EAAE,CAAC;YAE9B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAE5B;QAIa,eAAS,GAAvB,UAAwB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAErC,OAAO,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;SAEhD;QAIa,UAAI,GAAlB,UAAmB,CAAC,EAAE,CAAC,EAAE,CAAC;YAEtB,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAE9B;QAIa,gBAAU,GAAxB,UAAyB,CAAC,EAAE,GAAG,EAAE,GAAG;YAEhC,IAAI,CAAC,IAAI,GAAG;gBAAE,OAAO,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG;gBAAE,OAAO,CAAC,CAAC;YAEvB,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;YAE5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAE9B;QAEa,kBAAY,GAA1B,UAA2B,CAAC,EAAE,GAAG,EAAE,GAAG;YAElC,IAAI,CAAC,IAAI,GAAG;gBAAE,OAAO,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG;gBAAE,OAAO,CAAC,CAAC;YAEvB,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;YAE5B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;SAE9C;QAIa,aAAO,GAArB,UAAsB,GAAG,EAAE,IAAI;YAE3B,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAE7D;QAIM,+BAAe,GAAtB,UAAuB,GAAG,EAAE,IAAI;YAE5B,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;SAE7C;QAIa,qBAAe,GAA7B,UAA8B,KAAK;YAE/B,OAAO,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAExC;QAEa,cAAQ,GAAtB,UAAuB,OAAO;YAE1B,OAAO,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;SAElC;QAEa,cAAQ,GAAtB,UAAuB,OAAO;YAE1B,OAAO,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;SAElC;QAEa,kBAAY,GAA1B,UAA2B,KAAK;YAE5B,OAAO,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;SAErD;QAEa,oBAAc,GAA5B,UAA6B,KAAK;YAE9B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAE7D;QAEa,qBAAe,GAA7B,UAA8B,KAAK;YAE/B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAE9D;QAnIa,aAAO,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;QACxB,aAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAoI1C,YAAC;KAtID;;ICJA,IAAM,cAAc,GAAG;QACnB,WAAW,EAAE,QAAQ;QACrB,cAAc,EAAE,QAAQ;QACxB,MAAM,EAAE,QAAQ;QAChB,YAAY,EAAE,QAAQ;QACtB,OAAO,EAAE,QAAQ;QACjB,OAAO,EAAE,QAAQ;QACjB,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAE,QAAQ;QACjB,gBAAgB,EAAE,QAAQ;QAC1B,MAAM,EAAE,QAAQ;QAChB,YAAY,EAAE,QAAQ;QACtB,OAAO,EAAE,QAAQ;QACjB,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,QAAQ;QACrB,YAAY,EAAE,QAAQ;QACtB,WAAW,EAAE,QAAQ;QACrB,OAAO,EAAE,QAAQ;QACjB,gBAAgB,EAAE,QAAQ;QAC1B,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,QAAQ;QAChB,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,QAAQ;QACpB,eAAe,EAAE,QAAQ;QACzB,UAAU,EAAE,QAAQ;QACpB,WAAW,EAAE,QAAQ;QACrB,UAAU,EAAE,QAAQ;QACpB,WAAW,EAAE,QAAQ;QACrB,aAAa,EAAE,QAAQ;QACvB,gBAAgB,EAAE,QAAQ;QAC1B,YAAY,EAAE,QAAQ;QACtB,YAAY,EAAE,QAAQ;QACtB,SAAS,EAAE,QAAQ;QACnB,YAAY,EAAE,QAAQ;QACtB,cAAc,EAAE,QAAQ;QACxB,eAAe,EAAE,QAAQ;QACzB,eAAe,EAAE,QAAQ;QACzB,eAAe,EAAE,QAAQ;QACzB,eAAe,EAAE,QAAQ;QACzB,YAAY,EAAE,QAAQ;QACtB,UAAU,EAAE,QAAQ;QACpB,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE,QAAQ;QACnB,SAAS,EAAE,QAAQ;QACnB,YAAY,EAAE,QAAQ;QACtB,WAAW,EAAE,QAAQ;QACrB,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE,QAAQ;QACnB,WAAW,EAAE,QAAQ;QACrB,YAAY,EAAE,QAAQ;QACtB,MAAM,EAAE,QAAQ;QAChB,WAAW,EAAE,QAAQ;QACrB,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,QAAQ;QACjB,aAAa,EAAE,QAAQ;QACvB,MAAM,EAAE,QAAQ;QAChB,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,QAAQ;QACnB,WAAW,EAAE,QAAQ;QACrB,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAE,QAAQ;QACjB,OAAO,EAAE,QAAQ;QACjB,UAAU,EAAE,QAAQ;QACpB,eAAe,EAAE,QAAQ;QACzB,WAAW,EAAE,QAAQ;QACrB,cAAc,EAAE,QAAQ;QACxB,WAAW,EAAE,QAAQ;QACrB,YAAY,EAAE,QAAQ;QACtB,WAAW,EAAE,QAAQ;QACrB,sBAAsB,EAAE,QAAQ;QAChC,WAAW,EAAE,QAAQ;QACrB,YAAY,EAAE,QAAQ;QACtB,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,QAAQ;QACrB,aAAa,EAAE,QAAQ;QACvB,eAAe,EAAE,QAAQ;QACzB,cAAc,EAAE,QAAQ;QACxB,gBAAgB,EAAE,QAAQ;QAC1B,gBAAgB,EAAE,QAAQ;QAC1B,gBAAgB,EAAE,QAAQ;QAC1B,aAAa,EAAE,QAAQ;QACvB,MAAM,EAAE,QAAQ;QAChB,WAAW,EAAE,QAAQ;QACrB,OAAO,EAAE,QAAQ;QACjB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,QAAQ;QAClB,kBAAkB,EAAE,QAAQ;QAC5B,YAAY,EAAE,QAAQ;QACtB,cAAc,EAAE,QAAQ;QACxB,cAAc,EAAE,QAAQ;QACxB,gBAAgB,EAAE,QAAQ;QAC1B,iBAAiB,EAAE,QAAQ;QAC3B,mBAAmB,EAAE,QAAQ;QAC7B,iBAAiB,EAAE,QAAQ;QAC3B,iBAAiB,EAAE,QAAQ;QAC3B,cAAc,EAAE,QAAQ;QACxB,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,QAAQ;QACrB,UAAU,EAAE,QAAQ;QACpB,aAAa,EAAE,QAAQ;QACvB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,QAAQ;QACnB,OAAO,EAAE,QAAQ;QACjB,WAAW,EAAE,QAAQ;QACrB,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,QAAQ;QACrB,QAAQ,EAAE,QAAQ;QAClB,eAAe,EAAE,QAAQ;QACzB,WAAW,EAAE,QAAQ;QACrB,eAAe,EAAE,QAAQ;QACzB,eAAe,EAAE,QAAQ;QACzB,YAAY,EAAE,QAAQ;QACtB,WAAW,EAAE,QAAQ;QACrB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,YAAY,EAAE,QAAQ;QACtB,QAAQ,EAAE,QAAQ;QAClB,eAAe,EAAE,QAAQ;QACzB,KAAK,EAAE,QAAQ;QACf,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,QAAQ;QACrB,aAAa,EAAE,QAAQ;QACvB,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,QAAQ;QACtB,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,QAAQ;QACpB,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,SAAS,EAAE,QAAQ;QACnB,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,QAAQ;QACrB,MAAM,EAAE,QAAQ;QAChB,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,QAAQ;QACrB,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,QAAQ;QACrB,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAE,QAAQ;QACjB,OAAO,EAAE,QAAQ;QACjB,YAAY,EAAE,QAAQ;QACtB,QAAQ,EAAE,QAAQ;QAClB,aAAa,EAAE,QAAQ;KAC1B,CAAC;IAEF,IAAM,KAAK,GAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;IACjC,IAAM,KAAK,GAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;;QAY7B,eAAY,CAA2B,EAAE,CAAE,EAAE,CAAE;YANxC,YAAO,GAAG,IAAI,CAAC;YAEf,MAAC,GAAG,CAAC,CAAC;YACN,MAAC,GAAG,CAAC,CAAC;YACN,MAAC,GAAG,CAAC,CAAC;YAGT,IAAI,CAAC,CAAC;gBAAE,OAAO,IAAI,CAAC;YACpB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnD;QAED,mBAAG,GAAH,UAAI,KAAK;YAEL,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;gBAExB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAEpB;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAElC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAEtB;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAElC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAExB;YAED,OAAO,IAAI,CAAC;SAEf;QAED,yBAAS,GAAT,UAAU,MAAM;YAEZ,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;YAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;YAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;YAEhB,OAAO,IAAI,CAAC;SAEf;QAED,sBAAM,GAAN,UAAO,GAAG;YAEN,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEtB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC;YACjC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;YAChC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YAE3B,OAAO,IAAI,CAAC;SAEf;QAED,sBAAM,GAAN,UAAO,CAAC,EAAE,CAAC,EAAE,CAAC;YAEV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAEX,OAAO,IAAI,CAAC;SAEf;QAED,sBAAM,GAAN,UAAO,CAAC,EAAE,CAAC,EAAE,CAAC;YAGV,CAAC,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzB,IAAI,CAAC,KAAK,CAAC,EAAE;gBAET,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;aAEhC;iBAAM;gBAEH,IAAM,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACnD,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAEtB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAErC;YAED,OAAO,IAAI,CAAC;SAEf;QAED,wBAAQ,GAAR,UAAS,KAAK;YAEV,SAAS,WAAW,CAAC,MAAM;gBAEvB,IAAI,MAAM,KAAK,SAAS;oBAAE,OAAO;gBAEjC,IAAI,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAExB,OAAO,CAAC,IAAI,CAAC,kCAAkC,GAAG,KAAK,GAAG,mBAAmB,CAAC,CAAC;iBAElF;aAEJ;YAGD,IAAI,CAAC,CAAC;YAEN,IAAI,CAAC,GAAG,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAInD,IAAI,OAAK,CAAC;gBACV,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAExB,QAAQ,IAAI;oBAER,KAAK,KAAK,CAAC;oBACX,KAAK,MAAM;wBAEP,IAAI,OAAK,GAAG,+DAA+D,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;4BAG1F,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;4BACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;4BACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;4BAErD,WAAW,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAEtB,OAAO,IAAI,CAAC;yBAEf;wBAED,IAAI,OAAK,GAAG,qEAAqE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;4BAGhG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;4BACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;4BACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;4BAErD,WAAW,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAEtB,OAAO,IAAI,CAAC;yBAEf;wBAED,MAAM;oBAEV,KAAK,KAAK,CAAC;oBACX,KAAK,MAAM;wBAEP,IAAI,OAAK,GAAG,+EAA+E,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;4BAG1G,IAAM,CAAC,GAAG,UAAU,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;4BACrC,IAAM,CAAC,GAAG,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;4BACvC,IAAM,CAAC,GAAG,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;4BAEvC,WAAW,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAEtB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;yBAE/B;wBAED,MAAM;iBAEb;aAEJ;iBAAM,IAAI,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAI7C,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;gBAExB,IAAI,IAAI,KAAK,CAAC,EAAE;oBAGZ,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAE3D,OAAO,IAAI,CAAC;iBAEf;qBAAM,IAAI,IAAI,KAAK,CAAC,EAAE;oBAGnB,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;oBAE3D,OAAO,IAAI,CAAC;iBAEf;aAEJ;YAED,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAE3B,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAEnC;YAED,OAAO,IAAI,CAAC;SAEf;QAED,4BAAY,GAAZ,UAAa,KAAK;YAGd,IAAM,GAAG,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YAElC,IAAI,GAAG,KAAK,SAAS,EAAE;gBAGnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAEpB;iBAAM;gBAGH,OAAO,CAAC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC,CAAC;aAEvD;YAED,OAAO,IAAI,CAAC;SAEf;QAED,qBAAK,GAAL;YAEI,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAE5C;QAED,oBAAI,GAAJ,UAAK,KAAK;YAEN,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAEjB,OAAO,IAAI,CAAC;SAEf;QAED,iCAAiB,GAAjB,UAAkB,KAAK,EAAE,WAAW;YAEhC,IAAI,WAAW,KAAK,SAAS;gBAAE,WAAW,GAAG,GAAG,CAAC;YAEjD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAExC,OAAO,IAAI,CAAC;SAEf;QAED,iCAAiB,GAAjB,UAAkB,KAAK,EAAE,WAAW;YAEhC,IAAI,WAAW,KAAK,SAAS;gBAAE,WAAW,GAAG,GAAG,CAAC;YAEjD,IAAM,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,KAAK,GAAG,GAAG,WAAW,IAAI,GAAG,CAAC;YAElE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAExC,OAAO,IAAI,CAAC;SAEf;QAED,oCAAoB,GAApB,UAAqB,WAAW;YAE5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;SAEf;QAED,oCAAoB,GAApB,UAAqB,WAAW;YAE5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;SAEf;QAED,gCAAgB,GAAhB,UAAiB,KAAK;YAElB,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE/B,OAAO,IAAI,CAAC;SAEf;QAED,gCAAgB,GAAhB,UAAiB,KAAK;YAElB,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE/B,OAAO,IAAI,CAAC;SAEf;QAED,mCAAmB,GAAnB;YAEI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAE5B,OAAO,IAAI,CAAC;SAEf;QAED,mCAAmB,GAAnB;YAEI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAE5B,OAAO,IAAI,CAAC;SAEf;QAED,sBAAM,GAAN;YAEI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;SAE3E;QAED,4BAAY,GAAZ;YAEI,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAE5D;QAED,sBAAM,GAAN,UAAO,MAAM;YAIT,IAAI,MAAM,KAAK,SAAS,EAAE;gBAEtB,OAAO,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;gBAC9D,MAAM,GAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;aAE/B;YAED,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAEzC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE9B,IAAI,GAAG,EAAE,UAAU,CAAC;YACpB,IAAM,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YAEpC,IAAI,GAAG,KAAK,GAAG,EAAE;gBAEb,GAAG,GAAG,CAAC,CAAC;gBACR,UAAU,GAAG,CAAC,CAAC;aAElB;iBAAM;gBAEH,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;gBAExB,UAAU,GAAG,SAAS,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;gBAE9E,QAAQ,GAAG;oBAEP,KAAK,CAAC;wBACF,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;wBACxC,MAAM;oBACV,KAAK,CAAC;wBACF,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;wBAC1B,MAAM;oBACV,KAAK,CAAC;wBACF,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;wBAC1B,MAAM;iBAEb;gBAED,GAAG,IAAI,CAAC,CAAC;aAEZ;YAED,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;YACf,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC;YACtB,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC;YAErB,OAAO,MAAM,CAAC;SAEjB;QAED,wBAAQ,GAAR;YAEI,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;SAExG;QAED,yBAAS,GAAT,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;YAEb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEnB,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YACb,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YACb,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YAEb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;SAEf;QAED,mBAAG,GAAH,UAAI,KAAK;YAEL,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAElB,OAAO,IAAI,CAAC;SAEf;QAED,yBAAS,GAAT,UAAU,MAAM,EAAE,MAAM;YAEpB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAE7B,OAAO,IAAI,CAAC;SAEf;QAED,yBAAS,GAAT,UAAU,CAAC;YAEP,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YAEZ,OAAO,IAAI,CAAC;SAEf;QAED,mBAAG,GAAH,UAAI,KAAK;YAEL,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;SAEf;QAED,wBAAQ,GAAR,UAAS,KAAK;YAEV,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAElB,OAAO,IAAI,CAAC;SAEf;QAED,8BAAc,GAAd,UAAe,CAAC;YAEZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YAEZ,OAAO,IAAI,CAAC;SAEf;QAED,oBAAI,GAAJ,UAAK,KAAK,EAAE,KAAK;YAEb,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;YACrC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;YACrC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;YAErC,OAAO,IAAI,CAAC;SAEf;QAED,uBAAO,GAAP,UAAQ,KAAK,EAAE,KAAK;YAEhB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEpB,IAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAC9C,IAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAC9C,IAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAE9C,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAErB,OAAO,IAAI,CAAC;SAEf;QAED,sBAAM,GAAN,UAAO,CAAC;YAEJ,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;SAEnE;QAED,yBAAS,GAAT,UAAU,KAAK,EAAE,MAAU;YAAV,uBAAA,EAAA,UAAU;YAEvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAE3B,OAAO,IAAI,CAAC;SAEf;QAED,uBAAO,GAAP,UAAQ,KAAU,EAAE,MAAU;YAAtB,sBAAA,EAAA,UAAU;YAAE,uBAAA,EAAA,UAAU;YAE1B,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAE3B,OAAO,KAAK,CAAC;SAEhB;QAED,sBAAM,GAAN;YAEI,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;SAExB;QA9gBa,WAAK,GAAG,cAAc,CAAC;QA+gBzC,YAAC;KAjhBD,IAihBC;IAED,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAEpB,IAAI,CAAC,GAAG,CAAC;YAAE,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC;YAAE,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;YAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;YAAE,OAAO,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;YAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACpD,OAAO,CAAC,CAAC;IAEb,CAAC;IAED,SAAS,YAAY,CAAC,CAAC;QAEnB,OAAO,CAAC,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,GAAG,YAAY,EAAE,GAAG,CAAC,CAAC;IAE7F,CAAC;IAED,SAAS,YAAY,CAAC,CAAC;QAEnB,OAAO,CAAC,CAAC,GAAG,SAAS,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC;IAEhF,CAAC;aAEe,KAAK,CAAC,CAAE,EAAE,CAAE,EAAE,CAAE;QAC5B,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B;;aClsBgB,KAAK,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW;QACzD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IAC/C;;;QCJI,oBAAY,CAAa,EAAE,CAAa,EAAE,CAAa,EAAE,CAAa;YAA1D,kBAAA,EAAA,KAAa;YAAE,kBAAA,EAAA,KAAa;YAAE,kBAAA,EAAA,KAAa;YAAE,kBAAA,EAAA,KAAa;YAwRtE,uBAAkB,GAAG;gBAIjB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,CAAC;gBAEN,IAAM,GAAG,GAAG,QAAQ,CAAC;gBAErB,OAAO,SAAS,kBAAkB,CAAC,KAAK,EAAE,GAAG;oBAEzC,IAAI,EAAE,KAAK,SAAS;wBAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;oBAEzC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAEvB,IAAI,CAAC,GAAG,GAAG,EAAE;wBAET,CAAC,GAAG,CAAC,CAAC;wBAEN,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;4BAEvC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBAEhC;6BAAM;4BAEH,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;yBAEhC;qBAEJ;yBAAM;wBAEH,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;qBAE/B;oBAED,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;oBACf,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;oBACf,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;oBACf,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;oBAEZ,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;iBAE3B,CAAC;aAEL,EAAE,CAAA;YAnUC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACf;QAEa,gBAAK,GAAnB,UAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC7B,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnC;QAEa,oBAAS,GAAvB,UAAwB,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;YAIzE,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EACzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EACzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EACzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAEzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EACzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EACzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EACzB,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YAE9B,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;gBAElD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAET,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAE3C,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EACzB,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;gBAG3B,IAAI,MAAM,GAAqB,qBAAqB,EAAE;oBAElD,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EACzB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;oBAErC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;oBAC5B,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;iBAE/B;gBAED,IAAM,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;gBAErB,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;gBACxB,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;gBACxB,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;gBACxB,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;gBAGxB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBAEb,IAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;oBAE/D,EAAE,IAAI,CAAC,CAAC;oBACR,EAAE,IAAI,CAAC,CAAC;oBACR,EAAE,IAAI,CAAC,CAAC;oBACR,EAAE,IAAI,CAAC,CAAC;iBAEX;aAEJ;YAED,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACpB,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACxB,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACxB,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;SAE3B;QAED,sBAAI,yBAAC;iBAAL;gBACI,OAAO,IAAI,CAAC,EAAE,CAAA;aACjB;iBAED,UAAM,KAAK;gBACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;;;WALA;QAOD,sBAAI,yBAAC;iBAAL;gBACI,OAAO,IAAI,CAAC,EAAE,CAAA;aACjB;iBAED,UAAM,KAAK;gBACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;;;WALA;QAOD,sBAAI,yBAAC;iBAAL;gBACI,OAAO,IAAI,CAAC,EAAE,CAAA;aACjB;iBAED,UAAM,KAAK;gBACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;;;WALA;QAOD,sBAAI,yBAAC;iBAAL;gBACI,OAAO,IAAI,CAAC,EAAE,CAAA;aACjB;iBAED,UAAM,KAAK;gBACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;;;WALA;QAOD,wBAAG,GAAH,UAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAEV,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAED,0BAAK,GAAL;YAEI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7D;QAED,yBAAI,GAAJ,UAAK,UAAU;YAEX,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC;YAEvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,OAAO,IAAI,CAAC;SAEf;QAED,iCAAY,GAAZ,UAAa,KAAK,EAAE,MAAO;YAEvB,IAAM,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YAGpE,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YAErB,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACtB,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACtB,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAEtB,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACtB,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACtB,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAEtB,IAAI,KAAK,KAAK,KAAK,EAAE;gBAEjB,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAEzC;iBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;gBAExB,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAEzC;iBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;gBAExB,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAEzC;iBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;gBAExB,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EA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G,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAE5C,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAE5C,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC1C,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC1C,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAE1C,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC1C,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC1C,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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"}